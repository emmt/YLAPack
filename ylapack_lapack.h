/*
 * ylapack_lapack.h --
 *
 * Definitions for LAPACK functions.
 *
 *-----------------------------------------------------------------------------
 *
 * Copyright (C) 2011-2012 Éric Thiébaut <thiebaut@obs.univ-lyon1.fr>
 *
 * This software is governed by the CeCILL-C license under French law and
 * abiding by the rules of distribution of free software.  You can use, modify
 * and/or redistribute the software under the terms of the CeCILL-C license as
 * circulated by CEA, CNRS and INRIA at the following URL
 * "http://www.cecill.info".
 *
 * As a counterpart to the access to the source code and rights to copy,
 * modify and redistribute granted by the license, users are provided only
 * with a limited warranty and the software's author, the holder of the
 * economic rights, and the successive licensors have only limited liability.
 *
 * In this respect, the user's attention is drawn to the risks associated with
 * loading, using, modifying and/or developing or reproducing the software by
 * the user in light of its specific status of free software, that may mean
 * that it is complicated to manipulate, and that also therefore means that it
 * is reserved for developers and experienced professionals having in-depth
 * computer knowledge. Users are therefore encouraged to load and test the
 * software's suitability as regards their requirements in conditions enabling
 * the security of their systems and/or data to be ensured and, more
 * generally, to use and operate it in the same conditions as regards
 * security.
 *
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL-C license and that you accept its terms.
 *
 *-----------------------------------------------------------------------------
 */

#ifndef _YLAPACK_H
# error this low-level header must only be included from ylapack.h
#endif

#if (FORTRAN_STYLE != 1)
# define DBDSDC   LAPACK_NAME(dbdsdc,DBDSDC)
# define SBDSDC   LAPACK_NAME(sbdsdc,SBDSDC)
# define CBDSQR   LAPACK_NAME(cbdsqr,CBDSQR)
# define DBDSQR   LAPACK_NAME(dbdsqr,DBDSQR)
# define SBDSQR   LAPACK_NAME(sbdsqr,SBDSQR)
# define ZBDSQR   LAPACK_NAME(zbdsqr,ZBDSQR)
# define ZCGESV   LAPACK_NAME(zcgesv,ZCGESV)
# define ZCPOSV   LAPACK_NAME(zcposv,ZCPOSV)
# define DDISNA   LAPACK_NAME(ddisna,DDISNA)
# define SDISNA   LAPACK_NAME(sdisna,SDISNA)
# define ZDRSCL   LAPACK_NAME(zdrscl,ZDRSCL)
# define SECOND   LAPACK_NAME(second,SECOND)
# define IEEECK   LAPACK_NAME(ieeeck,IEEECK)
# define CGBBRD   LAPACK_NAME(cgbbrd,CGBBRD)
# define DGBBRD   LAPACK_NAME(dgbbrd,DGBBRD)
# define SGBBRD   LAPACK_NAME(sgbbrd,SGBBRD)
# define ZGBBRD   LAPACK_NAME(zgbbrd,ZGBBRD)
# define CGBCON   LAPACK_NAME(cgbcon,CGBCON)
# define DGBCON   LAPACK_NAME(dgbcon,DGBCON)
# define SGBCON   LAPACK_NAME(sgbcon,SGBCON)
# define ZGBCON   LAPACK_NAME(zgbcon,ZGBCON)
# define CGBEQU   LAPACK_NAME(cgbequ,CGBEQU)
# define DGBEQU   LAPACK_NAME(dgbequ,DGBEQU)
# define SGBEQU   LAPACK_NAME(sgbequ,SGBEQU)
# define ZGBEQU   LAPACK_NAME(zgbequ,ZGBEQU)
# define CGBEQUB  LAPACK_NAME(cgbequb,CGBEQUB)
# define DGBEQUB  LAPACK_NAME(dgbequb,DGBEQUB)
# define SGBEQUB  LAPACK_NAME(sgbequb,SGBEQUB)
# define ZGBEQUB  LAPACK_NAME(zgbequb,ZGBEQUB)
# define CGBRFS   LAPACK_NAME(cgbrfs,CGBRFS)
# define DGBRFS   LAPACK_NAME(dgbrfs,DGBRFS)
# define SGBRFS   LAPACK_NAME(sgbrfs,SGBRFS)
# define ZGBRFS   LAPACK_NAME(zgbrfs,ZGBRFS)
# define CGBSV    LAPACK_NAME(cgbsv,CGBSV)
# define DGBSV    LAPACK_NAME(dgbsv,DGBSV)
# define SGBSV    LAPACK_NAME(sgbsv,SGBSV)
# define ZGBSV    LAPACK_NAME(zgbsv,ZGBSV)
# define CGBSVX   LAPACK_NAME(cgbsvx,CGBSVX)
# define DGBSVX   LAPACK_NAME(dgbsvx,DGBSVX)
# define SGBSVX   LAPACK_NAME(sgbsvx,SGBSVX)
# define ZGBSVX   LAPACK_NAME(zgbsvx,ZGBSVX)
# define CGBTRF   LAPACK_NAME(cgbtrf,CGBTRF)
# define DGBTRF   LAPACK_NAME(dgbtrf,DGBTRF)
# define SGBTRF   LAPACK_NAME(sgbtrf,SGBTRF)
# define ZGBTRF   LAPACK_NAME(zgbtrf,ZGBTRF)
# define CGBTRS   LAPACK_NAME(cgbtrs,CGBTRS)
# define DGBTRS   LAPACK_NAME(dgbtrs,DGBTRS)
# define SGBTRS   LAPACK_NAME(sgbtrs,SGBTRS)
# define ZGBTRS   LAPACK_NAME(zgbtrs,ZGBTRS)
# define CGEBAK   LAPACK_NAME(cgebak,CGEBAK)
# define DGEBAK   LAPACK_NAME(dgebak,DGEBAK)
# define SGEBAK   LAPACK_NAME(sgebak,SGEBAK)
# define ZGEBAK   LAPACK_NAME(zgebak,ZGEBAK)
# define CGEBAL   LAPACK_NAME(cgebal,CGEBAL)
# define DGEBAL   LAPACK_NAME(dgebal,DGEBAL)
# define SGEBAL   LAPACK_NAME(sgebal,SGEBAL)
# define ZGEBAL   LAPACK_NAME(zgebal,ZGEBAL)
# define CGEBRD   LAPACK_NAME(cgebrd,CGEBRD)
# define DGEBRD   LAPACK_NAME(dgebrd,DGEBRD)
# define SGEBRD   LAPACK_NAME(sgebrd,SGEBRD)
# define ZGEBRD   LAPACK_NAME(zgebrd,ZGEBRD)
# define CGECON   LAPACK_NAME(cgecon,CGECON)
# define DGECON   LAPACK_NAME(dgecon,DGECON)
# define SGECON   LAPACK_NAME(sgecon,SGECON)
# define ZGECON   LAPACK_NAME(zgecon,ZGECON)
# define CGEEQU   LAPACK_NAME(cgeequ,CGEEQU)
# define DGEEQU   LAPACK_NAME(dgeequ,DGEEQU)
# define SGEEQU   LAPACK_NAME(sgeequ,SGEEQU)
# define ZGEEQU   LAPACK_NAME(zgeequ,ZGEEQU)
# define CGEEQUB  LAPACK_NAME(cgeequb,CGEEQUB)
# define DGEEQUB  LAPACK_NAME(dgeequb,DGEEQUB)
# define SGEEQUB  LAPACK_NAME(sgeequb,SGEEQUB)
# define ZGEEQUB  LAPACK_NAME(zgeequb,ZGEEQUB)
# define CGEES    LAPACK_NAME(cgees,CGEES)
# define DGEES    LAPACK_NAME(dgees,DGEES)
# define SGEES    LAPACK_NAME(sgees,SGEES)
# define ZGEES    LAPACK_NAME(zgees,ZGEES)
# define CGEESX   LAPACK_NAME(cgeesx,CGEESX)
# define DGEESX   LAPACK_NAME(dgeesx,DGEESX)
# define SGEESX   LAPACK_NAME(sgeesx,SGEESX)
# define ZGEESX   LAPACK_NAME(zgeesx,ZGEESX)
# define CGEEV    LAPACK_NAME(cgeev,CGEEV)
# define DGEEV    LAPACK_NAME(dgeev,DGEEV)
# define SGEEV    LAPACK_NAME(sgeev,SGEEV)
# define ZGEEV    LAPACK_NAME(zgeev,ZGEEV)
# define CGEEVX   LAPACK_NAME(cgeevx,CGEEVX)
# define DGEEVX   LAPACK_NAME(dgeevx,DGEEVX)
# define SGEEVX   LAPACK_NAME(sgeevx,SGEEVX)
# define ZGEEVX   LAPACK_NAME(zgeevx,ZGEEVX)
# define CGEGS    LAPACK_NAME(cgegs,CGEGS)
# define DGEGS    LAPACK_NAME(dgegs,DGEGS)
# define SGEGS    LAPACK_NAME(sgegs,SGEGS)
# define ZGEGS    LAPACK_NAME(zgegs,ZGEGS)
# define CGEGV    LAPACK_NAME(cgegv,CGEGV)
# define DGEGV    LAPACK_NAME(dgegv,DGEGV)
# define SGEGV    LAPACK_NAME(sgegv,SGEGV)
# define ZGEGV    LAPACK_NAME(zgegv,ZGEGV)
# define CGEHRD   LAPACK_NAME(cgehrd,CGEHRD)
# define DGEHRD   LAPACK_NAME(dgehrd,DGEHRD)
# define SGEHRD   LAPACK_NAME(sgehrd,SGEHRD)
# define ZGEHRD   LAPACK_NAME(zgehrd,ZGEHRD)
# define DGEJSV   LAPACK_NAME(dgejsv,DGEJSV)
# define SGEJSV   LAPACK_NAME(sgejsv,SGEJSV)
# define CGELQF   LAPACK_NAME(cgelqf,CGELQF)
# define DGELQF   LAPACK_NAME(dgelqf,DGELQF)
# define SGELQF   LAPACK_NAME(sgelqf,SGELQF)
# define ZGELQF   LAPACK_NAME(zgelqf,ZGELQF)
# define CGELS    LAPACK_NAME(cgels,CGELS)
# define DGELS    LAPACK_NAME(dgels,DGELS)
# define SGELS    LAPACK_NAME(sgels,SGELS)
# define ZGELS    LAPACK_NAME(zgels,ZGELS)
# define CGELSD   LAPACK_NAME(cgelsd,CGELSD)
# define DGELSD   LAPACK_NAME(dgelsd,DGELSD)
# define SGELSD   LAPACK_NAME(sgelsd,SGELSD)
# define ZGELSD   LAPACK_NAME(zgelsd,ZGELSD)
# define CGELSS   LAPACK_NAME(cgelss,CGELSS)
# define DGELSS   LAPACK_NAME(dgelss,DGELSS)
# define SGELSS   LAPACK_NAME(sgelss,SGELSS)
# define ZGELSS   LAPACK_NAME(zgelss,ZGELSS)
# define CGELSX   LAPACK_NAME(cgelsx,CGELSX)
# define DGELSX   LAPACK_NAME(dgelsx,DGELSX)
# define SGELSX   LAPACK_NAME(sgelsx,SGELSX)
# define ZGELSX   LAPACK_NAME(zgelsx,ZGELSX)
# define CGELSY   LAPACK_NAME(cgelsy,CGELSY)
# define DGELSY   LAPACK_NAME(dgelsy,DGELSY)
# define SGELSY   LAPACK_NAME(sgelsy,SGELSY)
# define ZGELSY   LAPACK_NAME(zgelsy,ZGELSY)
# define CGEQLF   LAPACK_NAME(cgeqlf,CGEQLF)
# define DGEQLF   LAPACK_NAME(dgeqlf,DGEQLF)
# define SGEQLF   LAPACK_NAME(sgeqlf,SGEQLF)
# define ZGEQLF   LAPACK_NAME(zgeqlf,ZGEQLF)
# define CGEQPF   LAPACK_NAME(cgeqpf,CGEQPF)
# define DGEQPF   LAPACK_NAME(dgeqpf,DGEQPF)
# define SGEQPF   LAPACK_NAME(sgeqpf,SGEQPF)
# define ZGEQPF   LAPACK_NAME(zgeqpf,ZGEQPF)
# define CGEQRF   LAPACK_NAME(cgeqrf,CGEQRF)
# define DGEQRF   LAPACK_NAME(dgeqrf,DGEQRF)
# define SGEQRF   LAPACK_NAME(sgeqrf,SGEQRF)
# define ZGEQRF   LAPACK_NAME(zgeqrf,ZGEQRF)
# define CGEQRFP  LAPACK_NAME(cgeqrfp,CGEQRFP)
# define DGEQRFP  LAPACK_NAME(dgeqrfp,DGEQRFP)
# define SGEQRFP  LAPACK_NAME(sgeqrfp,SGEQRFP)
# define ZGEQRFP  LAPACK_NAME(zgeqrfp,ZGEQRFP)
# define CGERFS   LAPACK_NAME(cgerfs,CGERFS)
# define DGERFS   LAPACK_NAME(dgerfs,DGERFS)
# define SGERFS   LAPACK_NAME(sgerfs,SGERFS)
# define ZGERFS   LAPACK_NAME(zgerfs,ZGERFS)
# define CGERQF   LAPACK_NAME(cgerqf,CGERQF)
# define DGERQF   LAPACK_NAME(dgerqf,DGERQF)
# define SGERQF   LAPACK_NAME(sgerqf,SGERQF)
# define ZGERQF   LAPACK_NAME(zgerqf,ZGERQF)
# define CGESDD   LAPACK_NAME(cgesdd,CGESDD)
# define DGESDD   LAPACK_NAME(dgesdd,DGESDD)
# define SGESDD   LAPACK_NAME(sgesdd,SGESDD)
# define ZGESDD   LAPACK_NAME(zgesdd,ZGESDD)
# define CGESV    LAPACK_NAME(cgesv,CGESV)
# define DGESV    LAPACK_NAME(dgesv,DGESV)
# define SGESV    LAPACK_NAME(sgesv,SGESV)
# define ZGESV    LAPACK_NAME(zgesv,ZGESV)
# define CGESVD   LAPACK_NAME(cgesvd,CGESVD)
# define DGESVD   LAPACK_NAME(dgesvd,DGESVD)
# define SGESVD   LAPACK_NAME(sgesvd,SGESVD)
# define ZGESVD   LAPACK_NAME(zgesvd,ZGESVD)
# define DGESVJ   LAPACK_NAME(dgesvj,DGESVJ)
# define SGESVJ   LAPACK_NAME(sgesvj,SGESVJ)
# define CGESVX   LAPACK_NAME(cgesvx,CGESVX)
# define DGESVX   LAPACK_NAME(dgesvx,DGESVX)
# define SGESVX   LAPACK_NAME(sgesvx,SGESVX)
# define ZGESVX   LAPACK_NAME(zgesvx,ZGESVX)
# define CGETRF   LAPACK_NAME(cgetrf,CGETRF)
# define DGETRF   LAPACK_NAME(dgetrf,DGETRF)
# define SGETRF   LAPACK_NAME(sgetrf,SGETRF)
# define ZGETRF   LAPACK_NAME(zgetrf,ZGETRF)
# define CGETRI   LAPACK_NAME(cgetri,CGETRI)
# define DGETRI   LAPACK_NAME(dgetri,DGETRI)
# define SGETRI   LAPACK_NAME(sgetri,SGETRI)
# define ZGETRI   LAPACK_NAME(zgetri,ZGETRI)
# define CGETRS   LAPACK_NAME(cgetrs,CGETRS)
# define DGETRS   LAPACK_NAME(dgetrs,DGETRS)
# define SGETRS   LAPACK_NAME(sgetrs,SGETRS)
# define ZGETRS   LAPACK_NAME(zgetrs,ZGETRS)
# define CGGBAK   LAPACK_NAME(cggbak,CGGBAK)
# define DGGBAK   LAPACK_NAME(dggbak,DGGBAK)
# define SGGBAK   LAPACK_NAME(sggbak,SGGBAK)
# define ZGGBAK   LAPACK_NAME(zggbak,ZGGBAK)
# define CGGBAL   LAPACK_NAME(cggbal,CGGBAL)
# define DGGBAL   LAPACK_NAME(dggbal,DGGBAL)
# define SGGBAL   LAPACK_NAME(sggbal,SGGBAL)
# define ZGGBAL   LAPACK_NAME(zggbal,ZGGBAL)
# define CGGES    LAPACK_NAME(cgges,CGGES)
# define DGGES    LAPACK_NAME(dgges,DGGES)
# define SGGES    LAPACK_NAME(sgges,SGGES)
# define ZGGES    LAPACK_NAME(zgges,ZGGES)
# define CGGESX   LAPACK_NAME(cggesx,CGGESX)
# define DGGESX   LAPACK_NAME(dggesx,DGGESX)
# define SGGESX   LAPACK_NAME(sggesx,SGGESX)
# define ZGGESX   LAPACK_NAME(zggesx,ZGGESX)
# define CGGEV    LAPACK_NAME(cggev,CGGEV)
# define DGGEV    LAPACK_NAME(dggev,DGGEV)
# define SGGEV    LAPACK_NAME(sggev,SGGEV)
# define ZGGEV    LAPACK_NAME(zggev,ZGGEV)
# define CGGEVX   LAPACK_NAME(cggevx,CGGEVX)
# define DGGEVX   LAPACK_NAME(dggevx,DGGEVX)
# define SGGEVX   LAPACK_NAME(sggevx,SGGEVX)
# define ZGGEVX   LAPACK_NAME(zggevx,ZGGEVX)
# define CGGGLM   LAPACK_NAME(cggglm,CGGGLM)
# define DGGGLM   LAPACK_NAME(dggglm,DGGGLM)
# define SGGGLM   LAPACK_NAME(sggglm,SGGGLM)
# define ZGGGLM   LAPACK_NAME(zggglm,ZGGGLM)
# define CGGHRD   LAPACK_NAME(cgghrd,CGGHRD)
# define DGGHRD   LAPACK_NAME(dgghrd,DGGHRD)
# define SGGHRD   LAPACK_NAME(sgghrd,SGGHRD)
# define ZGGHRD   LAPACK_NAME(zgghrd,ZGGHRD)
# define CGGLSE   LAPACK_NAME(cgglse,CGGLSE)
# define DGGLSE   LAPACK_NAME(dgglse,DGGLSE)
# define SGGLSE   LAPACK_NAME(sgglse,SGGLSE)
# define ZGGLSE   LAPACK_NAME(zgglse,ZGGLSE)
# define CGGQRF   LAPACK_NAME(cggqrf,CGGQRF)
# define DGGQRF   LAPACK_NAME(dggqrf,DGGQRF)
# define SGGQRF   LAPACK_NAME(sggqrf,SGGQRF)
# define ZGGQRF   LAPACK_NAME(zggqrf,ZGGQRF)
# define CGGRQF   LAPACK_NAME(cggrqf,CGGRQF)
# define DGGRQF   LAPACK_NAME(dggrqf,DGGRQF)
# define SGGRQF   LAPACK_NAME(sggrqf,SGGRQF)
# define ZGGRQF   LAPACK_NAME(zggrqf,ZGGRQF)
# define CGGSVD   LAPACK_NAME(cggsvd,CGGSVD)
# define DGGSVD   LAPACK_NAME(dggsvd,DGGSVD)
# define SGGSVD   LAPACK_NAME(sggsvd,SGGSVD)
# define ZGGSVD   LAPACK_NAME(zggsvd,ZGGSVD)
# define CGGSVP   LAPACK_NAME(cggsvp,CGGSVP)
# define DGGSVP   LAPACK_NAME(dggsvp,DGGSVP)
# define SGGSVP   LAPACK_NAME(sggsvp,SGGSVP)
# define ZGGSVP   LAPACK_NAME(zggsvp,ZGGSVP)
# define CGTCON   LAPACK_NAME(cgtcon,CGTCON)
# define DGTCON   LAPACK_NAME(dgtcon,DGTCON)
# define SGTCON   LAPACK_NAME(sgtcon,SGTCON)
# define ZGTCON   LAPACK_NAME(zgtcon,ZGTCON)
# define CGTRFS   LAPACK_NAME(cgtrfs,CGTRFS)
# define DGTRFS   LAPACK_NAME(dgtrfs,DGTRFS)
# define SGTRFS   LAPACK_NAME(sgtrfs,SGTRFS)
# define ZGTRFS   LAPACK_NAME(zgtrfs,ZGTRFS)
# define CGTSV    LAPACK_NAME(cgtsv,CGTSV)
# define DGTSV    LAPACK_NAME(dgtsv,DGTSV)
# define SGTSV    LAPACK_NAME(sgtsv,SGTSV)
# define ZGTSV    LAPACK_NAME(zgtsv,ZGTSV)
# define CGTSVX   LAPACK_NAME(cgtsvx,CGTSVX)
# define DGTSVX   LAPACK_NAME(dgtsvx,DGTSVX)
# define SGTSVX   LAPACK_NAME(sgtsvx,SGTSVX)
# define ZGTSVX   LAPACK_NAME(zgtsvx,ZGTSVX)
# define CGTTRF   LAPACK_NAME(cgttrf,CGTTRF)
# define DGTTRF   LAPACK_NAME(dgttrf,DGTTRF)
# define SGTTRF   LAPACK_NAME(sgttrf,SGTTRF)
# define ZGTTRF   LAPACK_NAME(zgttrf,ZGTTRF)
# define CGTTRS   LAPACK_NAME(cgttrs,CGTTRS)
# define DGTTRS   LAPACK_NAME(dgttrs,DGTTRS)
# define SGTTRS   LAPACK_NAME(sgttrs,SGTTRS)
# define ZGTTRS   LAPACK_NAME(zgttrs,ZGTTRS)
# define CHBEV    LAPACK_NAME(chbev,CHBEV)
# define ZHBEV    LAPACK_NAME(zhbev,ZHBEV)
# define CHBEVD   LAPACK_NAME(chbevd,CHBEVD)
# define ZHBEVD   LAPACK_NAME(zhbevd,ZHBEVD)
# define CHBEVX   LAPACK_NAME(chbevx,CHBEVX)
# define ZHBEVX   LAPACK_NAME(zhbevx,ZHBEVX)
# define CHBGST   LAPACK_NAME(chbgst,CHBGST)
# define ZHBGST   LAPACK_NAME(zhbgst,ZHBGST)
# define CHBGV    LAPACK_NAME(chbgv,CHBGV)
# define ZHBGV    LAPACK_NAME(zhbgv,ZHBGV)
# define CHBGVD   LAPACK_NAME(chbgvd,CHBGVD)
# define ZHBGVD   LAPACK_NAME(zhbgvd,ZHBGVD)
# define CHBGVX   LAPACK_NAME(chbgvx,CHBGVX)
# define ZHBGVX   LAPACK_NAME(zhbgvx,ZHBGVX)
# define CHBTRD   LAPACK_NAME(chbtrd,CHBTRD)
# define ZHBTRD   LAPACK_NAME(zhbtrd,ZHBTRD)
# define CHECON   LAPACK_NAME(checon,CHECON)
# define ZHECON   LAPACK_NAME(zhecon,ZHECON)
# define CHEEQUB  LAPACK_NAME(cheequb,CHEEQUB)
# define ZHEEQUB  LAPACK_NAME(zheequb,ZHEEQUB)
# define CHEEV    LAPACK_NAME(cheev,CHEEV)
# define ZHEEV    LAPACK_NAME(zheev,ZHEEV)
# define CHEEVD   LAPACK_NAME(cheevd,CHEEVD)
# define ZHEEVD   LAPACK_NAME(zheevd,ZHEEVD)
# define CHEEVR   LAPACK_NAME(cheevr,CHEEVR)
# define ZHEEVR   LAPACK_NAME(zheevr,ZHEEVR)
# define CHEEVX   LAPACK_NAME(cheevx,CHEEVX)
# define ZHEEVX   LAPACK_NAME(zheevx,ZHEEVX)
# define CHEGST   LAPACK_NAME(chegst,CHEGST)
# define ZHEGST   LAPACK_NAME(zhegst,ZHEGST)
# define CHEGV    LAPACK_NAME(chegv,CHEGV)
# define ZHEGV    LAPACK_NAME(zhegv,ZHEGV)
# define CHEGVD   LAPACK_NAME(chegvd,CHEGVD)
# define ZHEGVD   LAPACK_NAME(zhegvd,ZHEGVD)
# define CHEGVX   LAPACK_NAME(chegvx,CHEGVX)
# define ZHEGVX   LAPACK_NAME(zhegvx,ZHEGVX)
# define CHERFS   LAPACK_NAME(cherfs,CHERFS)
# define ZHERFS   LAPACK_NAME(zherfs,ZHERFS)
# define CHESV    LAPACK_NAME(chesv,CHESV)
# define ZHESV    LAPACK_NAME(zhesv,ZHESV)
# define CHESVX   LAPACK_NAME(chesvx,CHESVX)
# define ZHESVX   LAPACK_NAME(zhesvx,ZHESVX)
# define CHETRD   LAPACK_NAME(chetrd,CHETRD)
# define ZHETRD   LAPACK_NAME(zhetrd,ZHETRD)
# define CHETRF   LAPACK_NAME(chetrf,CHETRF)
# define ZHETRF   LAPACK_NAME(zhetrf,ZHETRF)
# define CHETRI   LAPACK_NAME(chetri,CHETRI)
# define ZHETRI   LAPACK_NAME(zhetri,ZHETRI)
# define CHETRS   LAPACK_NAME(chetrs,CHETRS)
# define ZHETRS   LAPACK_NAME(zhetrs,ZHETRS)
# define CHFRK    LAPACK_NAME(chfrk,CHFRK)
# define ZHFRK    LAPACK_NAME(zhfrk,ZHFRK)
# define CHGEQZ   LAPACK_NAME(chgeqz,CHGEQZ)
# define DHGEQZ   LAPACK_NAME(dhgeqz,DHGEQZ)
# define SHGEQZ   LAPACK_NAME(shgeqz,SHGEQZ)
# define ZHGEQZ   LAPACK_NAME(zhgeqz,ZHGEQZ)
# define CHPCON   LAPACK_NAME(chpcon,CHPCON)
# define ZHPCON   LAPACK_NAME(zhpcon,ZHPCON)
# define CHPEV    LAPACK_NAME(chpev,CHPEV)
# define ZHPEV    LAPACK_NAME(zhpev,ZHPEV)
# define CHPEVD   LAPACK_NAME(chpevd,CHPEVD)
# define ZHPEVD   LAPACK_NAME(zhpevd,ZHPEVD)
# define CHPEVX   LAPACK_NAME(chpevx,CHPEVX)
# define ZHPEVX   LAPACK_NAME(zhpevx,ZHPEVX)
# define CHPGST   LAPACK_NAME(chpgst,CHPGST)
# define ZHPGST   LAPACK_NAME(zhpgst,ZHPGST)
# define CHPGV    LAPACK_NAME(chpgv,CHPGV)
# define ZHPGV    LAPACK_NAME(zhpgv,ZHPGV)
# define CHPGVD   LAPACK_NAME(chpgvd,CHPGVD)
# define ZHPGVD   LAPACK_NAME(zhpgvd,ZHPGVD)
# define CHPGVX   LAPACK_NAME(chpgvx,CHPGVX)
# define ZHPGVX   LAPACK_NAME(zhpgvx,ZHPGVX)
# define CHPRFS   LAPACK_NAME(chprfs,CHPRFS)
# define ZHPRFS   LAPACK_NAME(zhprfs,ZHPRFS)
# define CHPSV    LAPACK_NAME(chpsv,CHPSV)
# define ZHPSV    LAPACK_NAME(zhpsv,ZHPSV)
# define CHPSVX   LAPACK_NAME(chpsvx,CHPSVX)
# define ZHPSVX   LAPACK_NAME(zhpsvx,ZHPSVX)
# define CHPTRD   LAPACK_NAME(chptrd,CHPTRD)
# define ZHPTRD   LAPACK_NAME(zhptrd,ZHPTRD)
# define CHPTRF   LAPACK_NAME(chptrf,CHPTRF)
# define ZHPTRF   LAPACK_NAME(zhptrf,ZHPTRF)
# define CHPTRI   LAPACK_NAME(chptri,CHPTRI)
# define ZHPTRI   LAPACK_NAME(zhptri,ZHPTRI)
# define CHPTRS   LAPACK_NAME(chptrs,CHPTRS)
# define ZHPTRS   LAPACK_NAME(zhptrs,ZHPTRS)
# define CHSEIN   LAPACK_NAME(chsein,CHSEIN)
# define DHSEIN   LAPACK_NAME(dhsein,DHSEIN)
# define SHSEIN   LAPACK_NAME(shsein,SHSEIN)
# define ZHSEIN   LAPACK_NAME(zhsein,ZHSEIN)
# define CHSEQR   LAPACK_NAME(chseqr,CHSEQR)
# define DHSEQR   LAPACK_NAME(dhseqr,DHSEQR)
# define SHSEQR   LAPACK_NAME(shseqr,SHSEQR)
# define ZHSEQR   LAPACK_NAME(zhseqr,ZHSEQR)
# define DISNAN   LAPACK_NAME(disnan,DISNAN)
# define SISNAN   LAPACK_NAME(sisnan,SISNAN)
# define DLABAD   LAPACK_NAME(dlabad,DLABAD)
# define SLABAD   LAPACK_NAME(slabad,SLABAD)
# define CLABRD   LAPACK_NAME(clabrd,CLABRD)
# define DLABRD   LAPACK_NAME(dlabrd,DLABRD)
# define SLABRD   LAPACK_NAME(slabrd,SLABRD)
# define ZLABRD   LAPACK_NAME(zlabrd,ZLABRD)
# define CLACGV   LAPACK_NAME(clacgv,CLACGV)
# define ZLACGV   LAPACK_NAME(zlacgv,ZLACGV)
# define ILACLC   LAPACK_NAME(ilaclc,ILACLC)
# define ILACLR   LAPACK_NAME(ilaclr,ILACLR)
# define CLACON   LAPACK_NAME(clacon,CLACON)
# define DLACON   LAPACK_NAME(dlacon,DLACON)
# define SLACON   LAPACK_NAME(slacon,SLACON)
# define ZLACON   LAPACK_NAME(zlacon,ZLACON)
# define CLACPY   LAPACK_NAME(clacpy,CLACPY)
# define DLACPY   LAPACK_NAME(dlacpy,DLACPY)
# define SLACPY   LAPACK_NAME(slacpy,SLACPY)
# define ZLACPY   LAPACK_NAME(zlacpy,ZLACPY)
# define CLACRM   LAPACK_NAME(clacrm,CLACRM)
# define ZLACRM   LAPACK_NAME(zlacrm,ZLACRM)
# define CLACRT   LAPACK_NAME(clacrt,CLACRT)
# define ZLACRT   LAPACK_NAME(zlacrt,ZLACRT)
# define ILADIAG  LAPACK_NAME(iladiag,ILADIAG)
# define CLADIV   LAPACK_NAME(cladiv,CLADIV)
# define DLADIV   LAPACK_NAME(dladiv,DLADIV)
# define SLADIV   LAPACK_NAME(sladiv,SLADIV)
# define ZLADIV   LAPACK_NAME(zladiv,ZLADIV)
# define ILADLC   LAPACK_NAME(iladlc,ILADLC)
# define ILADLR   LAPACK_NAME(iladlr,ILADLR)
# define DLAEBZ   LAPACK_NAME(dlaebz,DLAEBZ)
# define SLAEBZ   LAPACK_NAME(slaebz,SLAEBZ)
# define DLAEDA   LAPACK_NAME(dlaeda,DLAEDA)
# define SLAEDA   LAPACK_NAME(slaeda,SLAEDA)
# define CLAEIN   LAPACK_NAME(claein,CLAEIN)
# define DLAEIN   LAPACK_NAME(dlaein,DLAEIN)
# define SLAEIN   LAPACK_NAME(slaein,SLAEIN)
# define ZLAEIN   LAPACK_NAME(zlaein,ZLAEIN)
# define ILAENV   LAPACK_NAME(ilaenv,ILAENV)
# define CLAESY   LAPACK_NAME(claesy,CLAESY)
# define ZLAESY   LAPACK_NAME(zlaesy,ZLAESY)
# define DLAEXC   LAPACK_NAME(dlaexc,DLAEXC)
# define SLAEXC   LAPACK_NAME(slaexc,SLAEXC)
# define DLAGTF   LAPACK_NAME(dlagtf,DLAGTF)
# define SLAGTF   LAPACK_NAME(slagtf,SLAGTF)
# define CLAGTM   LAPACK_NAME(clagtm,CLAGTM)
# define DLAGTM   LAPACK_NAME(dlagtm,DLAGTM)
# define SLAGTM   LAPACK_NAME(slagtm,SLAGTM)
# define ZLAGTM   LAPACK_NAME(zlagtm,ZLAGTM)
# define DLAGTS   LAPACK_NAME(dlagts,DLAGTS)
# define SLAGTS   LAPACK_NAME(slagts,SLAGTS)
# define CLAHEF   LAPACK_NAME(clahef,CLAHEF)
# define ZLAHEF   LAPACK_NAME(zlahef,ZLAHEF)
# define CLAHQR   LAPACK_NAME(clahqr,CLAHQR)
# define DLAHQR   LAPACK_NAME(dlahqr,DLAHQR)
# define SLAHQR   LAPACK_NAME(slahqr,SLAHQR)
# define ZLAHQR   LAPACK_NAME(zlahqr,ZLAHQR)
# define CLAHRD   LAPACK_NAME(clahrd,CLAHRD)
# define DLAHRD   LAPACK_NAME(dlahrd,DLAHRD)
# define SLAHRD   LAPACK_NAME(slahrd,SLAHRD)
# define ZLAHRD   LAPACK_NAME(zlahrd,ZLAHRD)
# define DLAISNAN LAPACK_NAME(dlaisnan,DLAISNAN)
# define SLAISNAN LAPACK_NAME(slaisnan,SLAISNAN)
# define CLALSA   LAPACK_NAME(clalsa,CLALSA)
# define DLALSA   LAPACK_NAME(dlalsa,DLALSA)
# define SLALSA   LAPACK_NAME(slalsa,SLALSA)
# define ZLALSA   LAPACK_NAME(zlalsa,ZLALSA)
# define CLALSD   LAPACK_NAME(clalsd,CLALSD)
# define DLALSD   LAPACK_NAME(dlalsd,DLALSD)
# define SLALSD   LAPACK_NAME(slalsd,SLALSD)
# define ZLALSD   LAPACK_NAME(zlalsd,ZLALSD)
# define DLAMCH   LAPACK_NAME(dlamch,DLAMCH)
# define SLAMCH   LAPACK_NAME(slamch,SLAMCH)
# define DLAMRG   LAPACK_NAME(dlamrg,DLAMRG)
# define SLAMRG   LAPACK_NAME(slamrg,SLAMRG)
# define DLANEG   LAPACK_NAME(dlaneg,DLANEG)
# define SLANEG   LAPACK_NAME(slaneg,SLANEG)
# define CLANGB   LAPACK_NAME(clangb,CLANGB)
# define DLANGB   LAPACK_NAME(dlangb,DLANGB)
# define SLANGB   LAPACK_NAME(slangb,SLANGB)
# define ZLANGB   LAPACK_NAME(zlangb,ZLANGB)
# define CLANGE   LAPACK_NAME(clange,CLANGE)
# define DLANGE   LAPACK_NAME(dlange,DLANGE)
# define SLANGE   LAPACK_NAME(slange,SLANGE)
# define ZLANGE   LAPACK_NAME(zlange,ZLANGE)
# define CLANGT   LAPACK_NAME(clangt,CLANGT)
# define DLANGT   LAPACK_NAME(dlangt,DLANGT)
# define SLANGT   LAPACK_NAME(slangt,SLANGT)
# define ZLANGT   LAPACK_NAME(zlangt,ZLANGT)
# define CLANHB   LAPACK_NAME(clanhb,CLANHB)
# define ZLANHB   LAPACK_NAME(zlanhb,ZLANHB)
# define CLANHE   LAPACK_NAME(clanhe,CLANHE)
# define ZLANHE   LAPACK_NAME(zlanhe,ZLANHE)
# define CLANHF   LAPACK_NAME(clanhf,CLANHF)
# define ZLANHF   LAPACK_NAME(zlanhf,ZLANHF)
# define CLANHP   LAPACK_NAME(clanhp,CLANHP)
# define ZLANHP   LAPACK_NAME(zlanhp,ZLANHP)
# define CLANHS   LAPACK_NAME(clanhs,CLANHS)
# define DLANHS   LAPACK_NAME(dlanhs,DLANHS)
# define SLANHS   LAPACK_NAME(slanhs,SLANHS)
# define ZLANHS   LAPACK_NAME(zlanhs,ZLANHS)
# define CLANHT   LAPACK_NAME(clanht,CLANHT)
# define ZLANHT   LAPACK_NAME(zlanht,ZLANHT)
# define CLANSB   LAPACK_NAME(clansb,CLANSB)
# define DLANSB   LAPACK_NAME(dlansb,DLANSB)
# define SLANSB   LAPACK_NAME(slansb,SLANSB)
# define ZLANSB   LAPACK_NAME(zlansb,ZLANSB)
# define DLANSF   LAPACK_NAME(dlansf,DLANSF)
# define SLANSF   LAPACK_NAME(slansf,SLANSF)
# define CLANSP   LAPACK_NAME(clansp,CLANSP)
# define DLANSP   LAPACK_NAME(dlansp,DLANSP)
# define SLANSP   LAPACK_NAME(slansp,SLANSP)
# define ZLANSP   LAPACK_NAME(zlansp,ZLANSP)
# define DLANST   LAPACK_NAME(dlanst,DLANST)
# define SLANST   LAPACK_NAME(slanst,SLANST)
# define CLANSY   LAPACK_NAME(clansy,CLANSY)
# define DLANSY   LAPACK_NAME(dlansy,DLANSY)
# define SLANSY   LAPACK_NAME(slansy,SLANSY)
# define ZLANSY   LAPACK_NAME(zlansy,ZLANSY)
# define CLANTB   LAPACK_NAME(clantb,CLANTB)
# define DLANTB   LAPACK_NAME(dlantb,DLANTB)
# define SLANTB   LAPACK_NAME(slantb,SLANTB)
# define ZLANTB   LAPACK_NAME(zlantb,ZLANTB)
# define CLANTP   LAPACK_NAME(clantp,CLANTP)
# define DLANTP   LAPACK_NAME(dlantp,DLANTP)
# define SLANTP   LAPACK_NAME(slantp,SLANTP)
# define ZLANTP   LAPACK_NAME(zlantp,ZLANTP)
# define CLANTR   LAPACK_NAME(clantr,CLANTR)
# define DLANTR   LAPACK_NAME(dlantr,DLANTR)
# define SLANTR   LAPACK_NAME(slantr,SLANTR)
# define ZLANTR   LAPACK_NAME(zlantr,ZLANTR)
# define CLAPLL   LAPACK_NAME(clapll,CLAPLL)
# define DLAPLL   LAPACK_NAME(dlapll,DLAPLL)
# define SLAPLL   LAPACK_NAME(slapll,SLAPLL)
# define ZLAPLL   LAPACK_NAME(zlapll,ZLAPLL)
# define CLAPMT   LAPACK_NAME(clapmt,CLAPMT)
# define DLAPMT   LAPACK_NAME(dlapmt,DLAPMT)
# define SLAPMT   LAPACK_NAME(slapmt,SLAPMT)
# define ZLAPMT   LAPACK_NAME(zlapmt,ZLAPMT)
# define ILAPREC  LAPACK_NAME(ilaprec,ILAPREC)
# define CLAQGB   LAPACK_NAME(claqgb,CLAQGB)
# define DLAQGB   LAPACK_NAME(dlaqgb,DLAQGB)
# define SLAQGB   LAPACK_NAME(slaqgb,SLAQGB)
# define ZLAQGB   LAPACK_NAME(zlaqgb,ZLAQGB)
# define CLAQGE   LAPACK_NAME(claqge,CLAQGE)
# define DLAQGE   LAPACK_NAME(dlaqge,DLAQGE)
# define SLAQGE   LAPACK_NAME(slaqge,SLAQGE)
# define ZLAQGE   LAPACK_NAME(zlaqge,ZLAQGE)
# define CLAQHB   LAPACK_NAME(claqhb,CLAQHB)
# define ZLAQHB   LAPACK_NAME(zlaqhb,ZLAQHB)
# define CLAQHE   LAPACK_NAME(claqhe,CLAQHE)
# define ZLAQHE   LAPACK_NAME(zlaqhe,ZLAQHE)
# define CLAQHP   LAPACK_NAME(claqhp,CLAQHP)
# define ZLAQHP   LAPACK_NAME(zlaqhp,ZLAQHP)
# define CLAQPS   LAPACK_NAME(claqps,CLAQPS)
# define DLAQPS   LAPACK_NAME(dlaqps,DLAQPS)
# define SLAQPS   LAPACK_NAME(slaqps,SLAQPS)
# define ZLAQPS   LAPACK_NAME(zlaqps,ZLAQPS)
# define CLAQSB   LAPACK_NAME(claqsb,CLAQSB)
# define DLAQSB   LAPACK_NAME(dlaqsb,DLAQSB)
# define SLAQSB   LAPACK_NAME(slaqsb,SLAQSB)
# define ZLAQSB   LAPACK_NAME(zlaqsb,ZLAQSB)
# define CLAQSP   LAPACK_NAME(claqsp,CLAQSP)
# define DLAQSP   LAPACK_NAME(dlaqsp,DLAQSP)
# define SLAQSP   LAPACK_NAME(slaqsp,SLAQSP)
# define ZLAQSP   LAPACK_NAME(zlaqsp,ZLAQSP)
# define CLAQSY   LAPACK_NAME(claqsy,CLAQSY)
# define DLAQSY   LAPACK_NAME(dlaqsy,DLAQSY)
# define SLAQSY   LAPACK_NAME(slaqsy,SLAQSY)
# define ZLAQSY   LAPACK_NAME(zlaqsy,ZLAQSY)
# define DLAQTR   LAPACK_NAME(dlaqtr,DLAQTR)
# define SLAQTR   LAPACK_NAME(slaqtr,SLAQTR)
# define CLARCM   LAPACK_NAME(clarcm,CLARCM)
# define ZLARCM   LAPACK_NAME(zlarcm,ZLARCM)
# define CLARF    LAPACK_NAME(clarf,CLARF)
# define DLARF    LAPACK_NAME(dlarf,DLARF)
# define SLARF    LAPACK_NAME(slarf,SLARF)
# define ZLARF    LAPACK_NAME(zlarf,ZLARF)
# define CLARFB   LAPACK_NAME(clarfb,CLARFB)
# define DLARFB   LAPACK_NAME(dlarfb,DLARFB)
# define SLARFB   LAPACK_NAME(slarfb,SLARFB)
# define ZLARFB   LAPACK_NAME(zlarfb,ZLARFB)
# define CLARFG   LAPACK_NAME(clarfg,CLARFG)
# define DLARFG   LAPACK_NAME(dlarfg,DLARFG)
# define SLARFG   LAPACK_NAME(slarfg,SLARFG)
# define ZLARFG   LAPACK_NAME(zlarfg,ZLARFG)
# define CLARFGP  LAPACK_NAME(clarfgp,CLARFGP)
# define DLARFGP  LAPACK_NAME(dlarfgp,DLARFGP)
# define SLARFGP  LAPACK_NAME(slarfgp,SLARFGP)
# define ZLARFGP  LAPACK_NAME(zlarfgp,ZLARFGP)
# define CLARFT   LAPACK_NAME(clarft,CLARFT)
# define DLARFT   LAPACK_NAME(dlarft,DLARFT)
# define SLARFT   LAPACK_NAME(slarft,SLARFT)
# define ZLARFT   LAPACK_NAME(zlarft,ZLARFT)
# define CLARFX   LAPACK_NAME(clarfx,CLARFX)
# define DLARFX   LAPACK_NAME(dlarfx,DLARFX)
# define SLARFX   LAPACK_NAME(slarfx,SLARFX)
# define ZLARFX   LAPACK_NAME(zlarfx,ZLARFX)
# define CLARGV   LAPACK_NAME(clargv,CLARGV)
# define DLARGV   LAPACK_NAME(dlargv,DLARGV)
# define SLARGV   LAPACK_NAME(slargv,SLARGV)
# define ZLARGV   LAPACK_NAME(zlargv,ZLARGV)
# define CLARNV   LAPACK_NAME(clarnv,CLARNV)
# define DLARNV   LAPACK_NAME(dlarnv,DLARNV)
# define SLARNV   LAPACK_NAME(slarnv,SLARNV)
# define ZLARNV   LAPACK_NAME(zlarnv,ZLARNV)
# define DLARRA   LAPACK_NAME(dlarra,DLARRA)
# define SLARRA   LAPACK_NAME(slarra,SLARRA)
# define DLARRB   LAPACK_NAME(dlarrb,DLARRB)
# define SLARRB   LAPACK_NAME(slarrb,SLARRB)
# define DLARRC   LAPACK_NAME(dlarrc,DLARRC)
# define SLARRC   LAPACK_NAME(slarrc,SLARRC)
# define DLARRD   LAPACK_NAME(dlarrd,DLARRD)
# define SLARRD   LAPACK_NAME(slarrd,SLARRD)
# define DLARRE   LAPACK_NAME(dlarre,DLARRE)
# define SLARRE   LAPACK_NAME(slarre,SLARRE)
# define DLARRF   LAPACK_NAME(dlarrf,DLARRF)
# define SLARRF   LAPACK_NAME(slarrf,SLARRF)
# define DLARRJ   LAPACK_NAME(dlarrj,DLARRJ)
# define SLARRJ   LAPACK_NAME(slarrj,SLARRJ)
# define DLARRK   LAPACK_NAME(dlarrk,DLARRK)
# define SLARRK   LAPACK_NAME(slarrk,SLARRK)
# define DLARRR   LAPACK_NAME(dlarrr,DLARRR)
# define SLARRR   LAPACK_NAME(slarrr,SLARRR)
# define CLARRV   LAPACK_NAME(clarrv,CLARRV)
# define DLARRV   LAPACK_NAME(dlarrv,DLARRV)
# define SLARRV   LAPACK_NAME(slarrv,SLARRV)
# define ZLARRV   LAPACK_NAME(zlarrv,ZLARRV)
# define CLARTG   LAPACK_NAME(clartg,CLARTG)
# define DLARTG   LAPACK_NAME(dlartg,DLARTG)
# define SLARTG   LAPACK_NAME(slartg,SLARTG)
# define ZLARTG   LAPACK_NAME(zlartg,ZLARTG)
# define CLARTV   LAPACK_NAME(clartv,CLARTV)
# define DLARTV   LAPACK_NAME(dlartv,DLARTV)
# define SLARTV   LAPACK_NAME(slartv,SLARTV)
# define ZLARTV   LAPACK_NAME(zlartv,ZLARTV)
# define DLARUV   LAPACK_NAME(dlaruv,DLARUV)
# define SLARUV   LAPACK_NAME(slaruv,SLARUV)
# define CLARZ    LAPACK_NAME(clarz,CLARZ)
# define DLARZ    LAPACK_NAME(dlarz,DLARZ)
# define SLARZ    LAPACK_NAME(slarz,SLARZ)
# define ZLARZ    LAPACK_NAME(zlarz,ZLARZ)
# define CLARZB   LAPACK_NAME(clarzb,CLARZB)
# define DLARZB   LAPACK_NAME(dlarzb,DLARZB)
# define SLARZB   LAPACK_NAME(slarzb,SLARZB)
# define ZLARZB   LAPACK_NAME(zlarzb,ZLARZB)
# define CLARZT   LAPACK_NAME(clarzt,CLARZT)
# define DLARZT   LAPACK_NAME(dlarzt,DLARZT)
# define SLARZT   LAPACK_NAME(slarzt,SLARZT)
# define ZLARZT   LAPACK_NAME(zlarzt,ZLARZT)
# define CLASCL   LAPACK_NAME(clascl,CLASCL)
# define DLASCL   LAPACK_NAME(dlascl,DLASCL)
# define SLASCL   LAPACK_NAME(slascl,SLASCL)
# define ZLASCL   LAPACK_NAME(zlascl,ZLASCL)
# define DLASDA   LAPACK_NAME(dlasda,DLASDA)
# define SLASDA   LAPACK_NAME(slasda,SLASDA)
# define DLASDQ   LAPACK_NAME(dlasdq,DLASDQ)
# define SLASDQ   LAPACK_NAME(slasdq,SLASDQ)
# define DLASDT   LAPACK_NAME(dlasdt,DLASDT)
# define SLASDT   LAPACK_NAME(slasdt,SLASDT)
# define CLASET   LAPACK_NAME(claset,CLASET)
# define DLASET   LAPACK_NAME(dlaset,DLASET)
# define SLASET   LAPACK_NAME(slaset,SLASET)
# define ZLASET   LAPACK_NAME(zlaset,ZLASET)
# define ILASLC   LAPACK_NAME(ilaslc,ILASLC)
# define ILASLR   LAPACK_NAME(ilaslr,ILASLR)
# define CLASR    LAPACK_NAME(clasr,CLASR)
# define DLASR    LAPACK_NAME(dlasr,DLASR)
# define SLASR    LAPACK_NAME(slasr,SLASR)
# define ZLASR    LAPACK_NAME(zlasr,ZLASR)
# define DLASRT   LAPACK_NAME(dlasrt,DLASRT)
# define SLASRT   LAPACK_NAME(slasrt,SLASRT)
# define CLASSQ   LAPACK_NAME(classq,CLASSQ)
# define DLASSQ   LAPACK_NAME(dlassq,DLASSQ)
# define SLASSQ   LAPACK_NAME(slassq,SLASSQ)
# define ZLASSQ   LAPACK_NAME(zlassq,ZLASSQ)
# define CLASWP   LAPACK_NAME(claswp,CLASWP)
# define DLASWP   LAPACK_NAME(dlaswp,DLASWP)
# define SLASWP   LAPACK_NAME(slaswp,SLASWP)
# define ZLASWP   LAPACK_NAME(zlaswp,ZLASWP)
# define CLASYF   LAPACK_NAME(clasyf,CLASYF)
# define DLASYF   LAPACK_NAME(dlasyf,DLASYF)
# define SLASYF   LAPACK_NAME(slasyf,SLASYF)
# define ZLASYF   LAPACK_NAME(zlasyf,ZLASYF)
# define CLATBS   LAPACK_NAME(clatbs,CLATBS)
# define DLATBS   LAPACK_NAME(dlatbs,DLATBS)
# define SLATBS   LAPACK_NAME(slatbs,SLATBS)
# define ZLATBS   LAPACK_NAME(zlatbs,ZLATBS)
# define CLATDF   LAPACK_NAME(clatdf,CLATDF)
# define DLATDF   LAPACK_NAME(dlatdf,DLATDF)
# define SLATDF   LAPACK_NAME(slatdf,SLATDF)
# define ZLATDF   LAPACK_NAME(zlatdf,ZLATDF)
# define CLATPS   LAPACK_NAME(clatps,CLATPS)
# define DLATPS   LAPACK_NAME(dlatps,DLATPS)
# define SLATPS   LAPACK_NAME(slatps,SLATPS)
# define ZLATPS   LAPACK_NAME(zlatps,ZLATPS)
# define ILATRANS LAPACK_NAME(ilatrans,ILATRANS)
# define CLATRD   LAPACK_NAME(clatrd,CLATRD)
# define DLATRD   LAPACK_NAME(dlatrd,DLATRD)
# define SLATRD   LAPACK_NAME(slatrd,SLATRD)
# define ZLATRD   LAPACK_NAME(zlatrd,ZLATRD)
# define CLATRS   LAPACK_NAME(clatrs,CLATRS)
# define DLATRS   LAPACK_NAME(dlatrs,DLATRS)
# define SLATRS   LAPACK_NAME(slatrs,SLATRS)
# define ZLATRS   LAPACK_NAME(zlatrs,ZLATRS)
# define CLATRZ   LAPACK_NAME(clatrz,CLATRZ)
# define DLATRZ   LAPACK_NAME(dlatrz,DLATRZ)
# define SLATRZ   LAPACK_NAME(slatrz,SLATRZ)
# define ZLATRZ   LAPACK_NAME(zlatrz,ZLATRZ)
# define CLATZM   LAPACK_NAME(clatzm,CLATZM)
# define DLATZM   LAPACK_NAME(dlatzm,DLATZM)
# define SLATZM   LAPACK_NAME(slatzm,SLATZM)
# define ZLATZM   LAPACK_NAME(zlatzm,ZLATZM)
# define ILAUPLO  LAPACK_NAME(ilauplo,ILAUPLO)
# define CLAUUM   LAPACK_NAME(clauum,CLAUUM)
# define DLAUUM   LAPACK_NAME(dlauum,DLAUUM)
# define SLAUUM   LAPACK_NAME(slauum,SLAUUM)
# define ZLAUUM   LAPACK_NAME(zlauum,ZLAUUM)
# define ILAVER   LAPACK_NAME(ilaver,ILAVER)
# define ILAZLC   LAPACK_NAME(ilazlc,ILAZLC)
# define ILAZLR   LAPACK_NAME(ilazlr,ILAZLR)
# define DOPGTR   LAPACK_NAME(dopgtr,DOPGTR)
# define SOPGTR   LAPACK_NAME(sopgtr,SOPGTR)
# define DOPMTR   LAPACK_NAME(dopmtr,DOPMTR)
# define SOPMTR   LAPACK_NAME(sopmtr,SOPMTR)
# define DORGBR   LAPACK_NAME(dorgbr,DORGBR)
# define SORGBR   LAPACK_NAME(sorgbr,SORGBR)
# define DORGHR   LAPACK_NAME(dorghr,DORGHR)
# define SORGHR   LAPACK_NAME(sorghr,SORGHR)
# define DORGLQ   LAPACK_NAME(dorglq,DORGLQ)
# define SORGLQ   LAPACK_NAME(sorglq,SORGLQ)
# define DORGQL   LAPACK_NAME(dorgql,DORGQL)
# define SORGQL   LAPACK_NAME(sorgql,SORGQL)
# define DORGQR   LAPACK_NAME(dorgqr,DORGQR)
# define SORGQR   LAPACK_NAME(sorgqr,SORGQR)
# define DORGRQ   LAPACK_NAME(dorgrq,DORGRQ)
# define SORGRQ   LAPACK_NAME(sorgrq,SORGRQ)
# define DORGTR   LAPACK_NAME(dorgtr,DORGTR)
# define SORGTR   LAPACK_NAME(sorgtr,SORGTR)
# define DORMBR   LAPACK_NAME(dormbr,DORMBR)
# define SORMBR   LAPACK_NAME(sormbr,SORMBR)
# define DORMHR   LAPACK_NAME(dormhr,DORMHR)
# define SORMHR   LAPACK_NAME(sormhr,SORMHR)
# define DORMLQ   LAPACK_NAME(dormlq,DORMLQ)
# define SORMLQ   LAPACK_NAME(sormlq,SORMLQ)
# define DORMQL   LAPACK_NAME(dormql,DORMQL)
# define SORMQL   LAPACK_NAME(sormql,SORMQL)
# define DORMQR   LAPACK_NAME(dormqr,DORMQR)
# define SORMQR   LAPACK_NAME(sormqr,SORMQR)
# define DORMRQ   LAPACK_NAME(dormrq,DORMRQ)
# define SORMRQ   LAPACK_NAME(sormrq,SORMRQ)
# define DORMRZ   LAPACK_NAME(dormrz,DORMRZ)
# define SORMRZ   LAPACK_NAME(sormrz,SORMRZ)
# define DORMTR   LAPACK_NAME(dormtr,DORMTR)
# define SORMTR   LAPACK_NAME(sormtr,SORMTR)
# define IPARMQ   LAPACK_NAME(iparmq,IPARMQ)
# define CPBCON   LAPACK_NAME(cpbcon,CPBCON)
# define DPBCON   LAPACK_NAME(dpbcon,DPBCON)
# define SPBCON   LAPACK_NAME(spbcon,SPBCON)
# define ZPBCON   LAPACK_NAME(zpbcon,ZPBCON)
# define CPBEQU   LAPACK_NAME(cpbequ,CPBEQU)
# define DPBEQU   LAPACK_NAME(dpbequ,DPBEQU)
# define SPBEQU   LAPACK_NAME(spbequ,SPBEQU)
# define ZPBEQU   LAPACK_NAME(zpbequ,ZPBEQU)
# define CPBRFS   LAPACK_NAME(cpbrfs,CPBRFS)
# define DPBRFS   LAPACK_NAME(dpbrfs,DPBRFS)
# define SPBRFS   LAPACK_NAME(spbrfs,SPBRFS)
# define ZPBRFS   LAPACK_NAME(zpbrfs,ZPBRFS)
# define CPBSTF   LAPACK_NAME(cpbstf,CPBSTF)
# define DPBSTF   LAPACK_NAME(dpbstf,DPBSTF)
# define SPBSTF   LAPACK_NAME(spbstf,SPBSTF)
# define ZPBSTF   LAPACK_NAME(zpbstf,ZPBSTF)
# define CPBSV    LAPACK_NAME(cpbsv,CPBSV)
# define DPBSV    LAPACK_NAME(dpbsv,DPBSV)
# define SPBSV    LAPACK_NAME(spbsv,SPBSV)
# define ZPBSV    LAPACK_NAME(zpbsv,ZPBSV)
# define CPBSVX   LAPACK_NAME(cpbsvx,CPBSVX)
# define DPBSVX   LAPACK_NAME(dpbsvx,DPBSVX)
# define SPBSVX   LAPACK_NAME(spbsvx,SPBSVX)
# define ZPBSVX   LAPACK_NAME(zpbsvx,ZPBSVX)
# define CPBTRF   LAPACK_NAME(cpbtrf,CPBTRF)
# define DPBTRF   LAPACK_NAME(dpbtrf,DPBTRF)
# define SPBTRF   LAPACK_NAME(spbtrf,SPBTRF)
# define ZPBTRF   LAPACK_NAME(zpbtrf,ZPBTRF)
# define CPBTRS   LAPACK_NAME(cpbtrs,CPBTRS)
# define DPBTRS   LAPACK_NAME(dpbtrs,DPBTRS)
# define SPBTRS   LAPACK_NAME(spbtrs,SPBTRS)
# define ZPBTRS   LAPACK_NAME(zpbtrs,ZPBTRS)
# define CPFTRF   LAPACK_NAME(cpftrf,CPFTRF)
# define DPFTRF   LAPACK_NAME(dpftrf,DPFTRF)
# define SPFTRF   LAPACK_NAME(spftrf,SPFTRF)
# define ZPFTRF   LAPACK_NAME(zpftrf,ZPFTRF)
# define CPFTRI   LAPACK_NAME(cpftri,CPFTRI)
# define DPFTRI   LAPACK_NAME(dpftri,DPFTRI)
# define SPFTRI   LAPACK_NAME(spftri,SPFTRI)
# define ZPFTRI   LAPACK_NAME(zpftri,ZPFTRI)
# define CPFTRS   LAPACK_NAME(cpftrs,CPFTRS)
# define DPFTRS   LAPACK_NAME(dpftrs,DPFTRS)
# define SPFTRS   LAPACK_NAME(spftrs,SPFTRS)
# define ZPFTRS   LAPACK_NAME(zpftrs,ZPFTRS)
# define CPOCON   LAPACK_NAME(cpocon,CPOCON)
# define DPOCON   LAPACK_NAME(dpocon,DPOCON)
# define SPOCON   LAPACK_NAME(spocon,SPOCON)
# define ZPOCON   LAPACK_NAME(zpocon,ZPOCON)
# define CPOEQU   LAPACK_NAME(cpoequ,CPOEQU)
# define DPOEQU   LAPACK_NAME(dpoequ,DPOEQU)
# define SPOEQU   LAPACK_NAME(spoequ,SPOEQU)
# define ZPOEQU   LAPACK_NAME(zpoequ,ZPOEQU)
# define CPOEQUB  LAPACK_NAME(cpoequb,CPOEQUB)
# define DPOEQUB  LAPACK_NAME(dpoequb,DPOEQUB)
# define SPOEQUB  LAPACK_NAME(spoequb,SPOEQUB)
# define ZPOEQUB  LAPACK_NAME(zpoequb,ZPOEQUB)
# define CPORFS   LAPACK_NAME(cporfs,CPORFS)
# define DPORFS   LAPACK_NAME(dporfs,DPORFS)
# define SPORFS   LAPACK_NAME(sporfs,SPORFS)
# define ZPORFS   LAPACK_NAME(zporfs,ZPORFS)
# define CPOSV    LAPACK_NAME(cposv,CPOSV)
# define DPOSV    LAPACK_NAME(dposv,DPOSV)
# define SPOSV    LAPACK_NAME(sposv,SPOSV)
# define ZPOSV    LAPACK_NAME(zposv,ZPOSV)
# define CPOSVX   LAPACK_NAME(cposvx,CPOSVX)
# define DPOSVX   LAPACK_NAME(dposvx,DPOSVX)
# define SPOSVX   LAPACK_NAME(sposvx,SPOSVX)
# define ZPOSVX   LAPACK_NAME(zposvx,ZPOSVX)
# define CPOTRF   LAPACK_NAME(cpotrf,CPOTRF)
# define DPOTRF   LAPACK_NAME(dpotrf,DPOTRF)
# define SPOTRF   LAPACK_NAME(spotrf,SPOTRF)
# define ZPOTRF   LAPACK_NAME(zpotrf,ZPOTRF)
# define CPOTRI   LAPACK_NAME(cpotri,CPOTRI)
# define DPOTRI   LAPACK_NAME(dpotri,DPOTRI)
# define SPOTRI   LAPACK_NAME(spotri,SPOTRI)
# define ZPOTRI   LAPACK_NAME(zpotri,ZPOTRI)
# define CPOTRS   LAPACK_NAME(cpotrs,CPOTRS)
# define DPOTRS   LAPACK_NAME(dpotrs,DPOTRS)
# define SPOTRS   LAPACK_NAME(spotrs,SPOTRS)
# define ZPOTRS   LAPACK_NAME(zpotrs,ZPOTRS)
# define CPPCON   LAPACK_NAME(cppcon,CPPCON)
# define DPPCON   LAPACK_NAME(dppcon,DPPCON)
# define SPPCON   LAPACK_NAME(sppcon,SPPCON)
# define ZPPCON   LAPACK_NAME(zppcon,ZPPCON)
# define CPPEQU   LAPACK_NAME(cppequ,CPPEQU)
# define DPPEQU   LAPACK_NAME(dppequ,DPPEQU)
# define SPPEQU   LAPACK_NAME(sppequ,SPPEQU)
# define ZPPEQU   LAPACK_NAME(zppequ,ZPPEQU)
# define CPPRFS   LAPACK_NAME(cpprfs,CPPRFS)
# define DPPRFS   LAPACK_NAME(dpprfs,DPPRFS)
# define SPPRFS   LAPACK_NAME(spprfs,SPPRFS)
# define ZPPRFS   LAPACK_NAME(zpprfs,ZPPRFS)
# define CPPSV    LAPACK_NAME(cppsv,CPPSV)
# define DPPSV    LAPACK_NAME(dppsv,DPPSV)
# define SPPSV    LAPACK_NAME(sppsv,SPPSV)
# define ZPPSV    LAPACK_NAME(zppsv,ZPPSV)
# define CPPSVX   LAPACK_NAME(cppsvx,CPPSVX)
# define DPPSVX   LAPACK_NAME(dppsvx,DPPSVX)
# define SPPSVX   LAPACK_NAME(sppsvx,SPPSVX)
# define ZPPSVX   LAPACK_NAME(zppsvx,ZPPSVX)
# define CPPTRF   LAPACK_NAME(cpptrf,CPPTRF)
# define DPPTRF   LAPACK_NAME(dpptrf,DPPTRF)
# define SPPTRF   LAPACK_NAME(spptrf,SPPTRF)
# define ZPPTRF   LAPACK_NAME(zpptrf,ZPPTRF)
# define CPPTRI   LAPACK_NAME(cpptri,CPPTRI)
# define DPPTRI   LAPACK_NAME(dpptri,DPPTRI)
# define SPPTRI   LAPACK_NAME(spptri,SPPTRI)
# define ZPPTRI   LAPACK_NAME(zpptri,ZPPTRI)
# define CPPTRS   LAPACK_NAME(cpptrs,CPPTRS)
# define DPPTRS   LAPACK_NAME(dpptrs,DPPTRS)
# define SPPTRS   LAPACK_NAME(spptrs,SPPTRS)
# define ZPPTRS   LAPACK_NAME(zpptrs,ZPPTRS)
# define CPSTRF   LAPACK_NAME(cpstrf,CPSTRF)
# define DPSTRF   LAPACK_NAME(dpstrf,DPSTRF)
# define SPSTRF   LAPACK_NAME(spstrf,SPSTRF)
# define ZPSTRF   LAPACK_NAME(zpstrf,ZPSTRF)
# define CPTCON   LAPACK_NAME(cptcon,CPTCON)
# define DPTCON   LAPACK_NAME(dptcon,DPTCON)
# define SPTCON   LAPACK_NAME(sptcon,SPTCON)
# define ZPTCON   LAPACK_NAME(zptcon,ZPTCON)
# define CPTEQR   LAPACK_NAME(cpteqr,CPTEQR)
# define DPTEQR   LAPACK_NAME(dpteqr,DPTEQR)
# define SPTEQR   LAPACK_NAME(spteqr,SPTEQR)
# define ZPTEQR   LAPACK_NAME(zpteqr,ZPTEQR)
# define CPTRFS   LAPACK_NAME(cptrfs,CPTRFS)
# define DPTRFS   LAPACK_NAME(dptrfs,DPTRFS)
# define SPTRFS   LAPACK_NAME(sptrfs,SPTRFS)
# define ZPTRFS   LAPACK_NAME(zptrfs,ZPTRFS)
# define CPTSV    LAPACK_NAME(cptsv,CPTSV)
# define DPTSV    LAPACK_NAME(dptsv,DPTSV)
# define SPTSV    LAPACK_NAME(sptsv,SPTSV)
# define ZPTSV    LAPACK_NAME(zptsv,ZPTSV)
# define CPTSVX   LAPACK_NAME(cptsvx,CPTSVX)
# define DPTSVX   LAPACK_NAME(dptsvx,DPTSVX)
# define SPTSVX   LAPACK_NAME(sptsvx,SPTSVX)
# define ZPTSVX   LAPACK_NAME(zptsvx,ZPTSVX)
# define CPTTRF   LAPACK_NAME(cpttrf,CPTTRF)
# define DPTTRF   LAPACK_NAME(dpttrf,DPTTRF)
# define SPTTRF   LAPACK_NAME(spttrf,SPTTRF)
# define ZPTTRF   LAPACK_NAME(zpttrf,ZPTTRF)
# define CPTTRS   LAPACK_NAME(cpttrs,CPTTRS)
# define DPTTRS   LAPACK_NAME(dpttrs,DPTTRS)
# define SPTTRS   LAPACK_NAME(spttrs,SPTTRS)
# define ZPTTRS   LAPACK_NAME(zpttrs,ZPTTRS)
# define DRSCL    LAPACK_NAME(drscl,DRSCL)
# define SRSCL    LAPACK_NAME(srscl,SRSCL)
# define DSBEV    LAPACK_NAME(dsbev,DSBEV)
# define SSBEV    LAPACK_NAME(ssbev,SSBEV)
# define DSBEVD   LAPACK_NAME(dsbevd,DSBEVD)
# define SSBEVD   LAPACK_NAME(ssbevd,SSBEVD)
# define DSBEVX   LAPACK_NAME(dsbevx,DSBEVX)
# define SSBEVX   LAPACK_NAME(ssbevx,SSBEVX)
# define DSBGST   LAPACK_NAME(dsbgst,DSBGST)
# define SSBGST   LAPACK_NAME(ssbgst,SSBGST)
# define DSBGV    LAPACK_NAME(dsbgv,DSBGV)
# define SSBGV    LAPACK_NAME(ssbgv,SSBGV)
# define DSBGVD   LAPACK_NAME(dsbgvd,DSBGVD)
# define SSBGVD   LAPACK_NAME(ssbgvd,SSBGVD)
# define DSBGVX   LAPACK_NAME(dsbgvx,DSBGVX)
# define SSBGVX   LAPACK_NAME(ssbgvx,SSBGVX)
# define DSBTRD   LAPACK_NAME(dsbtrd,DSBTRD)
# define SSBTRD   LAPACK_NAME(ssbtrd,SSBTRD)
# define DSECND   LAPACK_NAME(dsecnd,DSECND)
# define DSFRK    LAPACK_NAME(dsfrk,DSFRK)
# define SSFRK    LAPACK_NAME(ssfrk,SSFRK)
# define DSGESV   LAPACK_NAME(dsgesv,DSGESV)
# define CSPCON   LAPACK_NAME(cspcon,CSPCON)
# define DSPCON   LAPACK_NAME(dspcon,DSPCON)
# define SSPCON   LAPACK_NAME(sspcon,SSPCON)
# define ZSPCON   LAPACK_NAME(zspcon,ZSPCON)
# define DSPEV    LAPACK_NAME(dspev,DSPEV)
# define SSPEV    LAPACK_NAME(sspev,SSPEV)
# define DSPEVD   LAPACK_NAME(dspevd,DSPEVD)
# define SSPEVD   LAPACK_NAME(sspevd,SSPEVD)
# define DSPEVX   LAPACK_NAME(dspevx,DSPEVX)
# define SSPEVX   LAPACK_NAME(sspevx,SSPEVX)
# define DSPGST   LAPACK_NAME(dspgst,DSPGST)
# define SSPGST   LAPACK_NAME(sspgst,SSPGST)
# define DSPGV    LAPACK_NAME(dspgv,DSPGV)
# define SSPGV    LAPACK_NAME(sspgv,SSPGV)
# define DSPGVD   LAPACK_NAME(dspgvd,DSPGVD)
# define SSPGVD   LAPACK_NAME(sspgvd,SSPGVD)
# define DSPGVX   LAPACK_NAME(dspgvx,DSPGVX)
# define SSPGVX   LAPACK_NAME(sspgvx,SSPGVX)
# define CSPMV    LAPACK_NAME(cspmv,CSPMV)
# define ZSPMV    LAPACK_NAME(zspmv,ZSPMV)
# define DSPOSV   LAPACK_NAME(dsposv,DSPOSV)
# define CSPR     LAPACK_NAME(cspr,CSPR)
# define ZSPR     LAPACK_NAME(zspr,ZSPR)
# define CSPRFS   LAPACK_NAME(csprfs,CSPRFS)
# define DSPRFS   LAPACK_NAME(dsprfs,DSPRFS)
# define SSPRFS   LAPACK_NAME(ssprfs,SSPRFS)
# define ZSPRFS   LAPACK_NAME(zsprfs,ZSPRFS)
# define CSPSV    LAPACK_NAME(cspsv,CSPSV)
# define DSPSV    LAPACK_NAME(dspsv,DSPSV)
# define SSPSV    LAPACK_NAME(sspsv,SSPSV)
# define ZSPSV    LAPACK_NAME(zspsv,ZSPSV)
# define CSPSVX   LAPACK_NAME(cspsvx,CSPSVX)
# define DSPSVX   LAPACK_NAME(dspsvx,DSPSVX)
# define SSPSVX   LAPACK_NAME(sspsvx,SSPSVX)
# define ZSPSVX   LAPACK_NAME(zspsvx,ZSPSVX)
# define DSPTRD   LAPACK_NAME(dsptrd,DSPTRD)
# define SSPTRD   LAPACK_NAME(ssptrd,SSPTRD)
# define CSPTRF   LAPACK_NAME(csptrf,CSPTRF)
# define DSPTRF   LAPACK_NAME(dsptrf,DSPTRF)
# define SSPTRF   LAPACK_NAME(ssptrf,SSPTRF)
# define ZSPTRF   LAPACK_NAME(zsptrf,ZSPTRF)
# define CSPTRI   LAPACK_NAME(csptri,CSPTRI)
# define DSPTRI   LAPACK_NAME(dsptri,DSPTRI)
# define SSPTRI   LAPACK_NAME(ssptri,SSPTRI)
# define ZSPTRI   LAPACK_NAME(zsptri,ZSPTRI)
# define CSPTRS   LAPACK_NAME(csptrs,CSPTRS)
# define DSPTRS   LAPACK_NAME(dsptrs,DSPTRS)
# define SSPTRS   LAPACK_NAME(ssptrs,SSPTRS)
# define ZSPTRS   LAPACK_NAME(zsptrs,ZSPTRS)
# define CSRSCL   LAPACK_NAME(csrscl,CSRSCL)
# define DSTEBZ   LAPACK_NAME(dstebz,DSTEBZ)
# define SSTEBZ   LAPACK_NAME(sstebz,SSTEBZ)
# define CSTEDC   LAPACK_NAME(cstedc,CSTEDC)
# define DSTEDC   LAPACK_NAME(dstedc,DSTEDC)
# define SSTEDC   LAPACK_NAME(sstedc,SSTEDC)
# define ZSTEDC   LAPACK_NAME(zstedc,ZSTEDC)
# define CSTEGR   LAPACK_NAME(cstegr,CSTEGR)
# define DSTEGR   LAPACK_NAME(dstegr,DSTEGR)
# define SSTEGR   LAPACK_NAME(sstegr,SSTEGR)
# define ZSTEGR   LAPACK_NAME(zstegr,ZSTEGR)
# define CSTEIN   LAPACK_NAME(cstein,CSTEIN)
# define DSTEIN   LAPACK_NAME(dstein,DSTEIN)
# define SSTEIN   LAPACK_NAME(sstein,SSTEIN)
# define ZSTEIN   LAPACK_NAME(zstein,ZSTEIN)
# define CSTEMR   LAPACK_NAME(cstemr,CSTEMR)
# define DSTEMR   LAPACK_NAME(dstemr,DSTEMR)
# define SSTEMR   LAPACK_NAME(sstemr,SSTEMR)
# define ZSTEMR   LAPACK_NAME(zstemr,ZSTEMR)
# define CSTEQR   LAPACK_NAME(csteqr,CSTEQR)
# define DSTEQR   LAPACK_NAME(dsteqr,DSTEQR)
# define SSTEQR   LAPACK_NAME(ssteqr,SSTEQR)
# define ZSTEQR   LAPACK_NAME(zsteqr,ZSTEQR)
# define DSTERF   LAPACK_NAME(dsterf,DSTERF)
# define SSTERF   LAPACK_NAME(ssterf,SSTERF)
# define DSTEV    LAPACK_NAME(dstev,DSTEV)
# define SSTEV    LAPACK_NAME(sstev,SSTEV)
# define DSTEVD   LAPACK_NAME(dstevd,DSTEVD)
# define SSTEVD   LAPACK_NAME(sstevd,SSTEVD)
# define DSTEVR   LAPACK_NAME(dstevr,DSTEVR)
# define SSTEVR   LAPACK_NAME(sstevr,SSTEVR)
# define DSTEVX   LAPACK_NAME(dstevx,DSTEVX)
# define SSTEVX   LAPACK_NAME(sstevx,SSTEVX)
# define CSYCON   LAPACK_NAME(csycon,CSYCON)
# define DSYCON   LAPACK_NAME(dsycon,DSYCON)
# define SSYCON   LAPACK_NAME(ssycon,SSYCON)
# define ZSYCON   LAPACK_NAME(zsycon,ZSYCON)
# define CSYEQUB  LAPACK_NAME(csyequb,CSYEQUB)
# define DSYEQUB  LAPACK_NAME(dsyequb,DSYEQUB)
# define SSYEQUB  LAPACK_NAME(ssyequb,SSYEQUB)
# define ZSYEQUB  LAPACK_NAME(zsyequb,ZSYEQUB)
# define DSYEV    LAPACK_NAME(dsyev,DSYEV)
# define SSYEV    LAPACK_NAME(ssyev,SSYEV)
# define DSYEVD   LAPACK_NAME(dsyevd,DSYEVD)
# define SSYEVD   LAPACK_NAME(ssyevd,SSYEVD)
# define DSYEVR   LAPACK_NAME(dsyevr,DSYEVR)
# define SSYEVR   LAPACK_NAME(ssyevr,SSYEVR)
# define DSYEVX   LAPACK_NAME(dsyevx,DSYEVX)
# define SSYEVX   LAPACK_NAME(ssyevx,SSYEVX)
# define DSYGST   LAPACK_NAME(dsygst,DSYGST)
# define SSYGST   LAPACK_NAME(ssygst,SSYGST)
# define DSYGV    LAPACK_NAME(dsygv,DSYGV)
# define SSYGV    LAPACK_NAME(ssygv,SSYGV)
# define DSYGVD   LAPACK_NAME(dsygvd,DSYGVD)
# define SSYGVD   LAPACK_NAME(ssygvd,SSYGVD)
# define DSYGVX   LAPACK_NAME(dsygvx,DSYGVX)
# define SSYGVX   LAPACK_NAME(ssygvx,SSYGVX)
# define CSYMV    LAPACK_NAME(csymv,CSYMV)
# define ZSYMV    LAPACK_NAME(zsymv,ZSYMV)
# define CSYR     LAPACK_NAME(csyr,CSYR)
# define ZSYR     LAPACK_NAME(zsyr,ZSYR)
# define CSYRFS   LAPACK_NAME(csyrfs,CSYRFS)
# define DSYRFS   LAPACK_NAME(dsyrfs,DSYRFS)
# define SSYRFS   LAPACK_NAME(ssyrfs,SSYRFS)
# define ZSYRFS   LAPACK_NAME(zsyrfs,ZSYRFS)
# define CSYSV    LAPACK_NAME(csysv,CSYSV)
# define DSYSV    LAPACK_NAME(dsysv,DSYSV)
# define SSYSV    LAPACK_NAME(ssysv,SSYSV)
# define ZSYSV    LAPACK_NAME(zsysv,ZSYSV)
# define CSYSVX   LAPACK_NAME(csysvx,CSYSVX)
# define DSYSVX   LAPACK_NAME(dsysvx,DSYSVX)
# define SSYSVX   LAPACK_NAME(ssysvx,SSYSVX)
# define ZSYSVX   LAPACK_NAME(zsysvx,ZSYSVX)
# define DSYTRD   LAPACK_NAME(dsytrd,DSYTRD)
# define SSYTRD   LAPACK_NAME(ssytrd,SSYTRD)
# define CSYTRF   LAPACK_NAME(csytrf,CSYTRF)
# define DSYTRF   LAPACK_NAME(dsytrf,DSYTRF)
# define SSYTRF   LAPACK_NAME(ssytrf,SSYTRF)
# define ZSYTRF   LAPACK_NAME(zsytrf,ZSYTRF)
# define CSYTRI   LAPACK_NAME(csytri,CSYTRI)
# define DSYTRI   LAPACK_NAME(dsytri,DSYTRI)
# define SSYTRI   LAPACK_NAME(ssytri,SSYTRI)
# define ZSYTRI   LAPACK_NAME(zsytri,ZSYTRI)
# define CSYTRS   LAPACK_NAME(csytrs,CSYTRS)
# define DSYTRS   LAPACK_NAME(dsytrs,DSYTRS)
# define SSYTRS   LAPACK_NAME(ssytrs,SSYTRS)
# define ZSYTRS   LAPACK_NAME(zsytrs,ZSYTRS)
# define CTBCON   LAPACK_NAME(ctbcon,CTBCON)
# define DTBCON   LAPACK_NAME(dtbcon,DTBCON)
# define STBCON   LAPACK_NAME(stbcon,STBCON)
# define ZTBCON   LAPACK_NAME(ztbcon,ZTBCON)
# define CTBRFS   LAPACK_NAME(ctbrfs,CTBRFS)
# define DTBRFS   LAPACK_NAME(dtbrfs,DTBRFS)
# define STBRFS   LAPACK_NAME(stbrfs,STBRFS)
# define ZTBRFS   LAPACK_NAME(ztbrfs,ZTBRFS)
# define CTBTRS   LAPACK_NAME(ctbtrs,CTBTRS)
# define DTBTRS   LAPACK_NAME(dtbtrs,DTBTRS)
# define STBTRS   LAPACK_NAME(stbtrs,STBTRS)
# define ZTBTRS   LAPACK_NAME(ztbtrs,ZTBTRS)
# define CTFSM    LAPACK_NAME(ctfsm,CTFSM)
# define DTFSM    LAPACK_NAME(dtfsm,DTFSM)
# define STFSM    LAPACK_NAME(stfsm,STFSM)
# define ZTFSM    LAPACK_NAME(ztfsm,ZTFSM)
# define CTFTRI   LAPACK_NAME(ctftri,CTFTRI)
# define DTFTRI   LAPACK_NAME(dtftri,DTFTRI)
# define STFTRI   LAPACK_NAME(stftri,STFTRI)
# define ZTFTRI   LAPACK_NAME(ztftri,ZTFTRI)
# define CTFTTP   LAPACK_NAME(ctfttp,CTFTTP)
# define DTFTTP   LAPACK_NAME(dtfttp,DTFTTP)
# define STFTTP   LAPACK_NAME(stfttp,STFTTP)
# define ZTFTTP   LAPACK_NAME(ztfttp,ZTFTTP)
# define CTFTTR   LAPACK_NAME(ctfttr,CTFTTR)
# define DTFTTR   LAPACK_NAME(dtfttr,DTFTTR)
# define STFTTR   LAPACK_NAME(stfttr,STFTTR)
# define ZTFTTR   LAPACK_NAME(ztfttr,ZTFTTR)
# define CTGEVC   LAPACK_NAME(ctgevc,CTGEVC)
# define DTGEVC   LAPACK_NAME(dtgevc,DTGEVC)
# define STGEVC   LAPACK_NAME(stgevc,STGEVC)
# define ZTGEVC   LAPACK_NAME(ztgevc,ZTGEVC)
# define CTGEXC   LAPACK_NAME(ctgexc,CTGEXC)
# define DTGEXC   LAPACK_NAME(dtgexc,DTGEXC)
# define STGEXC   LAPACK_NAME(stgexc,STGEXC)
# define ZTGEXC   LAPACK_NAME(ztgexc,ZTGEXC)
# define CTGSEN   LAPACK_NAME(ctgsen,CTGSEN)
# define DTGSEN   LAPACK_NAME(dtgsen,DTGSEN)
# define STGSEN   LAPACK_NAME(stgsen,STGSEN)
# define ZTGSEN   LAPACK_NAME(ztgsen,ZTGSEN)
# define CTGSJA   LAPACK_NAME(ctgsja,CTGSJA)
# define DTGSJA   LAPACK_NAME(dtgsja,DTGSJA)
# define STGSJA   LAPACK_NAME(stgsja,STGSJA)
# define ZTGSJA   LAPACK_NAME(ztgsja,ZTGSJA)
# define CTGSNA   LAPACK_NAME(ctgsna,CTGSNA)
# define DTGSNA   LAPACK_NAME(dtgsna,DTGSNA)
# define STGSNA   LAPACK_NAME(stgsna,STGSNA)
# define ZTGSNA   LAPACK_NAME(ztgsna,ZTGSNA)
# define CTGSYL   LAPACK_NAME(ctgsyl,CTGSYL)
# define DTGSYL   LAPACK_NAME(dtgsyl,DTGSYL)
# define STGSYL   LAPACK_NAME(stgsyl,STGSYL)
# define ZTGSYL   LAPACK_NAME(ztgsyl,ZTGSYL)
# define CTPCON   LAPACK_NAME(ctpcon,CTPCON)
# define DTPCON   LAPACK_NAME(dtpcon,DTPCON)
# define STPCON   LAPACK_NAME(stpcon,STPCON)
# define ZTPCON   LAPACK_NAME(ztpcon,ZTPCON)
# define CTPRFS   LAPACK_NAME(ctprfs,CTPRFS)
# define DTPRFS   LAPACK_NAME(dtprfs,DTPRFS)
# define STPRFS   LAPACK_NAME(stprfs,STPRFS)
# define ZTPRFS   LAPACK_NAME(ztprfs,ZTPRFS)
# define CTPTRI   LAPACK_NAME(ctptri,CTPTRI)
# define DTPTRI   LAPACK_NAME(dtptri,DTPTRI)
# define STPTRI   LAPACK_NAME(stptri,STPTRI)
# define ZTPTRI   LAPACK_NAME(ztptri,ZTPTRI)
# define CTPTRS   LAPACK_NAME(ctptrs,CTPTRS)
# define DTPTRS   LAPACK_NAME(dtptrs,DTPTRS)
# define STPTRS   LAPACK_NAME(stptrs,STPTRS)
# define ZTPTRS   LAPACK_NAME(ztptrs,ZTPTRS)
# define CTPTTF   LAPACK_NAME(ctpttf,CTPTTF)
# define DTPTTF   LAPACK_NAME(dtpttf,DTPTTF)
# define STPTTF   LAPACK_NAME(stpttf,STPTTF)
# define ZTPTTF   LAPACK_NAME(ztpttf,ZTPTTF)
# define CTPTTR   LAPACK_NAME(ctpttr,CTPTTR)
# define DTPTTR   LAPACK_NAME(dtpttr,DTPTTR)
# define STPTTR   LAPACK_NAME(stpttr,STPTTR)
# define ZTPTTR   LAPACK_NAME(ztpttr,ZTPTTR)
# define CTRCON   LAPACK_NAME(ctrcon,CTRCON)
# define DTRCON   LAPACK_NAME(dtrcon,DTRCON)
# define STRCON   LAPACK_NAME(strcon,STRCON)
# define ZTRCON   LAPACK_NAME(ztrcon,ZTRCON)
# define CTREVC   LAPACK_NAME(ctrevc,CTREVC)
# define DTREVC   LAPACK_NAME(dtrevc,DTREVC)
# define STREVC   LAPACK_NAME(strevc,STREVC)
# define ZTREVC   LAPACK_NAME(ztrevc,ZTREVC)
# define CTREXC   LAPACK_NAME(ctrexc,CTREXC)
# define DTREXC   LAPACK_NAME(dtrexc,DTREXC)
# define STREXC   LAPACK_NAME(strexc,STREXC)
# define ZTREXC   LAPACK_NAME(ztrexc,ZTREXC)
# define CTRRFS   LAPACK_NAME(ctrrfs,CTRRFS)
# define DTRRFS   LAPACK_NAME(dtrrfs,DTRRFS)
# define STRRFS   LAPACK_NAME(strrfs,STRRFS)
# define ZTRRFS   LAPACK_NAME(ztrrfs,ZTRRFS)
# define CTRSEN   LAPACK_NAME(ctrsen,CTRSEN)
# define DTRSEN   LAPACK_NAME(dtrsen,DTRSEN)
# define STRSEN   LAPACK_NAME(strsen,STRSEN)
# define ZTRSEN   LAPACK_NAME(ztrsen,ZTRSEN)
# define CTRSNA   LAPACK_NAME(ctrsna,CTRSNA)
# define DTRSNA   LAPACK_NAME(dtrsna,DTRSNA)
# define STRSNA   LAPACK_NAME(strsna,STRSNA)
# define ZTRSNA   LAPACK_NAME(ztrsna,ZTRSNA)
# define CTRSYL   LAPACK_NAME(ctrsyl,CTRSYL)
# define DTRSYL   LAPACK_NAME(dtrsyl,DTRSYL)
# define STRSYL   LAPACK_NAME(strsyl,STRSYL)
# define ZTRSYL   LAPACK_NAME(ztrsyl,ZTRSYL)
# define CTRTRI   LAPACK_NAME(ctrtri,CTRTRI)
# define DTRTRI   LAPACK_NAME(dtrtri,DTRTRI)
# define STRTRI   LAPACK_NAME(strtri,STRTRI)
# define ZTRTRI   LAPACK_NAME(ztrtri,ZTRTRI)
# define CTRTRS   LAPACK_NAME(ctrtrs,CTRTRS)
# define DTRTRS   LAPACK_NAME(dtrtrs,DTRTRS)
# define STRTRS   LAPACK_NAME(strtrs,STRTRS)
# define ZTRTRS   LAPACK_NAME(ztrtrs,ZTRTRS)
# define CTRTTF   LAPACK_NAME(ctrttf,CTRTTF)
# define DTRTTF   LAPACK_NAME(dtrttf,DTRTTF)
# define STRTTF   LAPACK_NAME(strttf,STRTTF)
# define ZTRTTF   LAPACK_NAME(ztrttf,ZTRTTF)
# define CTRTTP   LAPACK_NAME(ctrttp,CTRTTP)
# define DTRTTP   LAPACK_NAME(dtrttp,DTRTTP)
# define STRTTP   LAPACK_NAME(strttp,STRTTP)
# define ZTRTTP   LAPACK_NAME(ztrttp,ZTRTTP)
# define CTZRQF   LAPACK_NAME(ctzrqf,CTZRQF)
# define DTZRQF   LAPACK_NAME(dtzrqf,DTZRQF)
# define STZRQF   LAPACK_NAME(stzrqf,STZRQF)
# define ZTZRQF   LAPACK_NAME(ztzrqf,ZTZRQF)
# define CTZRZF   LAPACK_NAME(ctzrzf,CTZRZF)
# define DTZRZF   LAPACK_NAME(dtzrzf,DTZRZF)
# define STZRZF   LAPACK_NAME(stzrzf,STZRZF)
# define ZTZRZF   LAPACK_NAME(ztzrzf,ZTZRZF)
# define CUNGBR   LAPACK_NAME(cungbr,CUNGBR)
# define ZUNGBR   LAPACK_NAME(zungbr,ZUNGBR)
# define CUNGHR   LAPACK_NAME(cunghr,CUNGHR)
# define ZUNGHR   LAPACK_NAME(zunghr,ZUNGHR)
# define CUNGLQ   LAPACK_NAME(cunglq,CUNGLQ)
# define ZUNGLQ   LAPACK_NAME(zunglq,ZUNGLQ)
# define CUNGQL   LAPACK_NAME(cungql,CUNGQL)
# define ZUNGQL   LAPACK_NAME(zungql,ZUNGQL)
# define CUNGQR   LAPACK_NAME(cungqr,CUNGQR)
# define ZUNGQR   LAPACK_NAME(zungqr,ZUNGQR)
# define CUNGRQ   LAPACK_NAME(cungrq,CUNGRQ)
# define ZUNGRQ   LAPACK_NAME(zungrq,ZUNGRQ)
# define CUNGTR   LAPACK_NAME(cungtr,CUNGTR)
# define ZUNGTR   LAPACK_NAME(zungtr,ZUNGTR)
# define CUNMBR   LAPACK_NAME(cunmbr,CUNMBR)
# define ZUNMBR   LAPACK_NAME(zunmbr,ZUNMBR)
# define CUNMHR   LAPACK_NAME(cunmhr,CUNMHR)
# define ZUNMHR   LAPACK_NAME(zunmhr,ZUNMHR)
# define CUNMLQ   LAPACK_NAME(cunmlq,CUNMLQ)
# define ZUNMLQ   LAPACK_NAME(zunmlq,ZUNMLQ)
# define CUNMQL   LAPACK_NAME(cunmql,CUNMQL)
# define ZUNMQL   LAPACK_NAME(zunmql,ZUNMQL)
# define CUNMQR   LAPACK_NAME(cunmqr,CUNMQR)
# define ZUNMQR   LAPACK_NAME(zunmqr,ZUNMQR)
# define CUNMRQ   LAPACK_NAME(cunmrq,CUNMRQ)
# define ZUNMRQ   LAPACK_NAME(zunmrq,ZUNMRQ)
# define CUNMRZ   LAPACK_NAME(cunmrz,CUNMRZ)
# define ZUNMRZ   LAPACK_NAME(zunmrz,ZUNMRZ)
# define CUNMTR   LAPACK_NAME(cunmtr,CUNMTR)
# define ZUNMTR   LAPACK_NAME(zunmtr,ZUNMTR)
# define CUPGTR   LAPACK_NAME(cupgtr,CUPGTR)
# define ZUPGTR   LAPACK_NAME(zupgtr,ZUPGTR)
# define CUPMTR   LAPACK_NAME(cupmtr,CUPMTR)
# define ZUPMTR   LAPACK_NAME(zupmtr,ZUPMTR)
#endif /* FORTRAN_STYLE */

_YLPK_BEGIN_DECLS

extern void ILAVER(INTEGER *VERS_MAJOR,
                   INTEGER *VERS_MINOR,
                   INTEGER *VERS_PATCH);

/* _POTRF -- computes the Cholesky factorization of a real symmetric positive
             definite matrix A. */
#define PROTOTYPE(NAME,REAL)                                    \
  extern VOID NAME(CHARACTER *UPLO, INTEGER *N,                 \
                   REAL *A, INTEGER *LDA, INTEGER *INFO)
PROTOTYPE(SPOTRF, float);
PROTOTYPE(DPOTRF, double);
#undef PROTOTYPE

/* _POTRS -- solves a system of linear equations A*X = B with a symmetric
             positive definite matrix A using the Cholesky factorization
             computed by _POTRF. */
#define PROTOTYPE(NAME,REAL)                                   \
  extern VOID NAME(CHARACTER *UPLO, INTEGER *N, INTEGER *NRHS, \
                   REAL *A, INTEGER *LDA,                      \
                   REAL *B, INTEGER *LDB, INTEGER *INFO)
PROTOTYPE(SPOTRS, float);
PROTOTYPE(DPOTRS, double);
#undef PROTOTYPE

/* _POTRI -- computes the inverse of a real symmetric positive definite matrix
             A using the Cholesky factorization computed by _POTRF. */
#define PROTOTYPE(NAME,REAL)                                   \
  extern VOID NAME(CHARACTER *UPLO, INTEGER *N,                \
                   REAL *A, INTEGER *LDA, INTEGER *INFO)
PROTOTYPE(SPOTRI, float);
PROTOTYPE(DPOTRI, double);
#undef PROTOTYPE

/* _GESV -- computes the solution to the system of linear equations with a
            square matrix A and multiple right-hand sides. */
#define PROTOTYPE(NAME,REAL)                                    \
  extern VOID NAME(INTEGER *N, INTEGER *NRHS,                   \
                   REAL *A, INTEGER *LDA, INTEGER *IPVT,        \
                   REAL *B, INTEGER *LDB, INTEGER *INFO)
PROTOTYPE(SGESV, float);
PROTOTYPE(DGESV, double);
PROTOTYPE(CGESV, float);
PROTOTYPE(ZGESV, double);
#undef PROTOTYPE

/* _POSV -- computes the solution to the system of linear equations with a
            symmetric or Hermitian positive definite matrix A and multiple
            right-hand sides. */
#define PROTOTYPE(NAME,REAL)                                    \
  extern int NAME(CONST CHARACTER *UPLO, CONST INTEGER *N,      \
                  CONST INTEGER *NRHS,                          \
		  REAL *A, CONST INTEGER *LDA,                  \
                  REAL *B, CONST INTEGER *LDB, INTEGER *INFO)
PROTOTYPE(SPOSV, float);
PROTOTYPE(DPOSV, double);
PROTOTYPE(CPOSV, float);
PROTOTYPE(ZPOSV, double);
#undef PROTOTYPE

/* _SYSV -- computes the solution to the system of linear equations with a
            real or complex symmetric matrix A and multiple right-hand
            sides. */
#define PROTOTYPE(NAME,REAL)                                    \
  extern int NAME(CONST CHARACTER *UPLO, CONST INTEGER *N,      \
                  CONST INTEGER *NRHS,                          \
		  REAL *A, CONST INTEGER *LDA, INTEGER *IPIV,   \
                  REAL *B, CONST INTEGER *LDB,                  \
                  REAL *WORK, INTEGER *LWORK, INTEGER *INFO)
PROTOTYPE(SSYSV, float);
PROTOTYPE(DSYSV, double);
PROTOTYPE(CSYSV, float);
PROTOTYPE(ZSYSV, double);
#undef PROTOTYPE

/* _HESV -- computes the solution to the system of linear equations with a
            Hermitian matrix A and multiple right-hand sides. */
#define PROTOTYPE(NAME,REAL)                                    \
  extern int NAME(CONST CHARACTER *UPLO, CONST INTEGER *N,      \
                  CONST INTEGER *NRHS,                          \
		  REAL *A, CONST INTEGER *LDA, INTEGER *IPIV,   \
                  REAL *B, CONST INTEGER *LDB,                  \
                  REAL *WORK, INTEGER *LWORK, INTEGER *INFO)
PROTOTYPE(CHESV, float);
PROTOTYPE(ZHESV, double);
#undef PROTOTYPE

/* _SYEV -- computes the eigenvalues and eigenvectors of a symmetric or
 *          hermitian matrix. */
#define PROTOTYPE(NAME,REAL)                            \
  extern int NAME(CONST CHARACTER *JOBZ,                \
                  CONST CHARACTER *UPLO,                \
                  CONST INTEGER *N,                     \
		  REAL *A, CONST INTEGER *LDA,          \
		  REAL *W,                              \
                  REAL *WORK, CONST INTEGER *LWORK,     \
                  INTEGER *INFO)
PROTOTYPE(SSYEV, float);
PROTOTYPE(DSYEV, double);
#undef PROTOTYPE
#define PROTOTYPE(NAME,REAL)                            \
  extern int NAME(CONST CHARACTER *JOBZ,                \
                  CONST CHARACTER *UPLO,                \
                  CONST INTEGER *N,                     \
		  REAL *A, CONST INTEGER *LDA,          \
		  REAL *W,                              \
                  REAL *WORK, CONST INTEGER *LWORK,     \
                  REAL *RWORK,                          \
                  INTEGER *INFO)
PROTOTYPE(CHEEV, float);
PROTOTYPE(ZHEEV, double);
#undef PROTOTYPE

/* _SYEVD -- computes the eigenvalues and eigenvectors of a symmetric or
 *           hermitian matrix, using a divide and conquer algorithm for the
 *           eigenvectors. */
#define PROTOTYPE(NAME,REAL)                                    \
  extern int NAME(CONST CHARACTER *JOBZ,                        \
                  CONST CHARACTER *UPLO,                        \
                  CONST INTEGER *N,                             \
		  REAL *A, CONST INTEGER *LDA,                  \
		  REAL *W,                                      \
                  REAL *WORK, CONST INTEGER *LWORK,             \
                  INTEGER *IWORK, CONST INTEGER *LIWORK,        \
                  INTEGER *INFO)
PROTOTYPE(SSYEVD, float);
PROTOTYPE(DSYEVD, double);
#undef PROTOTYPE
#define PROTOTYPE(NAME,REAL)                                    \
  extern int NAME(CONST CHARACTER *JOBZ,                        \
                  CONST CHARACTER *UPLO,                        \
                  CONST INTEGER *N,                             \
		  REAL *A, CONST INTEGER *LDA,                  \
		  REAL *W,                                      \
                  REAL *WORK, CONST INTEGER *LWORK,             \
                  REAL *RWORK, CONST INTEGER *LRWORK,           \
                  INTEGER *IWORK, CONST INTEGER *LIWORK,        \
                  INTEGER *INFO)
PROTOTYPE(CHEEVD, float);
PROTOTYPE(ZHEEVD, double);
#undef PROTOTYPE

/* _GESVD -- computes the singular value decomposition (SVD). */
#define PROTOTYPE(NAME,REAL)                            \
  extern int NAME(CONST CHARACTER *JOBU,                \
                  CONST CHARACTER *JOBVT,               \
                  CONST INTEGER *M,                     \
                  CONST INTEGER *N,                     \
		  REAL *A, CONST INTEGER *LDA,          \
		  REAL *S,                              \
                  REAL *U, CONST INTEGER *LDU,          \
                  REAL *VT, CONST INTEGER *LDVT,        \
                  REAL *WORK, CONST INTEGER *LWORK,     \
                  INTEGER *INFO)
PROTOTYPE(SGESVD, float);
PROTOTYPE(DGESVD, double);
#undef PROTOTYPE
#define PROTOTYPE(NAME,REAL)                            \
  extern int NAME(CONST CHARACTER *JOBU,                \
                  CONST CHARACTER *JOBVT,               \
                  CONST INTEGER *M,                     \
                  CONST INTEGER *N,                     \
		  REAL *A, CONST INTEGER *LDA,          \
		  REAL *S,                              \
                  REAL *U, CONST INTEGER *LDU,          \
                  REAL *VT, CONST INTEGER *LDVT,        \
                  REAL *WORK, CONST INTEGER *LWORK,     \
                  REAL *RWORK,                          \
                  INTEGER *INFO)
PROTOTYPE(CGESVD, float);
PROTOTYPE(ZGESVD, double);
#undef PROTOTYPE

/* _GESDD -- computes the singular value decomposition (SVD) by 
 *           a divide-and-conquer algorithm. */
#define PROTOTYPE(NAME,REAL)                           \
  extern int NAME(CONST CHARACTER *JOBZ,               \
                  CONST INTEGER *M,                    \
                  CONST INTEGER *N,                    \
		  REAL *A, CONST INTEGER *LDA,         \
		  REAL *S,                             \
                  REAL *U, CONST INTEGER *LDU,         \
                  REAL *VT, CONST INTEGER *LDVT,       \
                  REAL *WORK, CONST INTEGER *LWORK,    \
                  INTEGER *IWORK,                      \
                  INTEGER *INFO)
PROTOTYPE(SGESDD, float);
PROTOTYPE(DGESDD, double);
#undef PROTOTYPE
#define PROTOTYPE(NAME,REAL)                           \
  extern int NAME(CONST CHARACTER *JOBZ,               \
                  CONST INTEGER *M,                    \
                  CONST INTEGER *N,                    \
		  REAL *A, CONST INTEGER *LDA,         \
		  REAL *S,                             \
                  REAL *U, CONST INTEGER *LDU,         \
                  REAL *VT, CONST INTEGER *LDVT,       \
                  REAL *WORK, CONST INTEGER *LWORK,    \
                  REAL *RWORK,                         \
                  INTEGER *IWORK,                      \
                  INTEGER *INFO)
PROTOTYPE(CGESDD, float);
PROTOTYPE(ZGESDD, double);
#undef PROTOTYPE

/* _GGSVD -- computes the generalized singular value decomposition (GSVD). */
#define PROTOTYPE(NAME,REAL)                                    \
  extern int NAME(CONST CHARACTER *JOBU, CONST CHARACTER *JOBV, \
                  CONST CHARACTER *JOBQ, CONST INTEGER *M,      \
                  CONST INTEGER *N, CONST INTEGER *P,           \
                  CONST INTEGER *K, CONST INTEGER *L,           \
		  REAL *A, CONST INTEGER *LDA,                  \
                  REAL *B, CONST INTEGER *LDB,                  \
                  REAL *ALPHA, REAL*BETA,                       \
		  REAL *U, CONST INTEGER *LDU,                  \
                  REAL *V, CONST INTEGER *LDV,                  \
		  REAL *Q, CONST INTEGER *LDQ,                  \
                  REAL *WORK, INTEGER *IWORK, INTEGER *INFO)
PROTOTYPE(SGGSVD, float);
PROTOTYPE(DGGSVD, double);
#undef PROTOTYPE
#define PROTOTYPE(NAME,REAL)                                    \
  extern int NAME(CONST CHARACTER *JOBU, CONST CHARACTER *JOBV, \
                  CONST CHARACTER *JOBQ, CONST INTEGER *M,      \
                  CONST INTEGER *N,  CONST INTEGER *P,          \
                  CONST INTEGER *K,  CONST INTEGER *L,          \
		  REAL *A, CONST INTEGER *LDA,                  \
                  REAL *B, CONST INTEGER *LDB,                  \
                  REAL *ALPHA, REAL*BETA,                       \
		  REAL *U, CONST INTEGER *LDU,                  \
                  REAL *V, CONST INTEGER *LDV,                  \
		  REAL *Q, CONST INTEGER *LDQ,                  \
                  REAL *WORK, REAL *RWORK, INTEGER *IWORK, INTEGER *INFO)
PROTOTYPE(ZGGSVD, double);
#undef PROTOTYPE

_YLPK_END_DECLS

/*
 * Local Variables:
 * mode: C
 * tab-width: 8
 * c-basic-offset: 2
 * fill-column: 78
 * coding: utf-8
 * End:
 */
